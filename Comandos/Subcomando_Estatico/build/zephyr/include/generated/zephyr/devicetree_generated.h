/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/ash/zephyrproject/zephyr/TutorialZephyr/Comandos/Subcomando_Estatico/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /soc
 *   3   /soc/interrupt-controller@e000e100
 *   4   /soc/gpio@40022000
 *   5   /soc/pinctrl@40081000
 *   6   /soc/pinctrl@40081000/board_ant_subg_off
 *   7   /soc/pinctrl@40081000/board_ant_subg_on
 *   8   /soc/pinctrl@40081000/board_ant_tx_pa_off
 *   9   /soc/pinctrl@40081000/board_ant_tx_pa_on
 *   10  /antenna_mux0
 *   11  /chosen
 *   12  /memory@11000000
 *   13  /memory@20000000
 *   14  /cpus
 *   15  /cpus/power-states
 *   16  /cpus/power-states/idle
 *   17  /cpus/power-states/standby
 *   18  /cpus/cpu@0
 *   19  /gpio_keys
 *   20  /gpio_keys/button_0
 *   21  /leds
 *   22  /leds/led_0
 *   23  /soc/pinctrl@40081000/i2c0_scl_default
 *   24  /soc/pinctrl@40081000/i2c0_scl_sleep
 *   25  /soc/pinctrl@40081000/i2c0_sda_default
 *   26  /soc/pinctrl@40081000/i2c0_sda_sleep
 *   27  /soc/i2c@40002000
 *   28  /sensor-switch
 *   29  /sensor-switch/hdc2010-humidity@41
 *   30  /sensor-switch/opt3001-light@44
 *   31  /soc/random@40028000
 *   32  /soc/rtc@40092000
 *   33  /soc/spi@40008000
 *   34  /soc/timer@e000e010
 *   35  /system-clock
 *   36  /soc/pinctrl@40081000/uart0_rx_default
 *   37  /soc/pinctrl@40081000/uart0_tx_default
 *   38  /soc/uart@40001000
 *   39  /soc/pinctrl@40081000/uart1_rx_default
 *   40  /soc/pinctrl@40081000/uart1_tx_default
 *   41  /soc/uart@4000b000
 *   42  /soc/watchdog@40080000
 *   43  /soc/adc@400cb008
 *   44  /soc/adc@400cb008/channel@9
 *   45  /soc/adc@400cb008/channel@a
 *   46  /soc/adc@400cb008/channel@b
 *   47  /soc/adc@400cb008/channel@c
 *   48  /soc/adc@400cb008/channel@d
 *   49  /soc/adc@400cb008/channel@e
 *   50  /soc/flash-controller@40030000
 *   51  /soc/flash-controller@40030000/flash@0
 *   52  /soc/flash-controller@40030000/flash@0/partitions
 *   53  /soc/flash-controller@40030000/flash@0/partitions/partition@0
 *   54  /soc/flash-controller@40030000/flash@0/partitions/partition@20000
 *   55  /soc/flash-controller@40030000/flash@0/partitions/partition@affa8
 *   56  /soc/i2c@40002000/msp430-usbbridge@4
 *   57  /soc/radio@40040000
 *   58  /soc/radio@40040000/ieee802154
 *   59  /soc/radio@40040000/ieee802154g
 *   60  /soc/pinctrl@40081000/spi0_cs0_default
 *   61  /soc/pinctrl@40081000/spi0_cs1_default
 *   62  /soc/pinctrl@40081000/spi0_cs2_default
 *   63  /soc/pinctrl@40081000/spi0_miso_default
 *   64  /soc/pinctrl@40081000/spi0_mosi_default
 *   65  /soc/pinctrl@40081000/spi0_sck_default
 *   66  /soc/spi@40000000
 *   67  /soc/spi@40000000/gd25q16c@0
 *   68  /soc/spi@40000000/gd25q16c@0/partitions
 *   69  /soc/spi@40000000/gd25q16c@0/partitions/partition@0
 *   70  /soc/spi@40000000/gd25q16c@0/partitions/partition@8e000
 *   71  /soc/spi@40000000/gd25q16c@0/partitions/partition@ae000
 *   72  /soc/timer@40010000
 *   73  /soc/pinctrl@40081000/pwm0_default
 *   74  /soc/timer@40010000/pwm
 *   75  /soc/timer@40011000
 *   76  /soc/pinctrl@40081000/pwm1_default
 *   77  /soc/timer@40011000/pwm
 *   78  /soc/timer@40012000
 *   79  /soc/timer@40012000/pwm
 *   80  /soc/timer@40013000
 *   81  /soc/timer@40013000/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 11
#define DT_N_CHILD_NUM_STATUS_OKAY 11
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_memory_11000000) fn(DT_N_S_system_clock) fn(DT_N_S_gpio_keys) fn(DT_N_S_antenna_mux0) fn(DT_N_S_leds) fn(DT_N_S_sensor_switch)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_11000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_antenna_mux0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sensor_switch)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_memory_11000000, __VA_ARGS__) fn(DT_N_S_system_clock, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_antenna_mux0, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_sensor_switch, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_11000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_antenna_mux0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sensor_switch, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_memory_11000000) fn(DT_N_S_system_clock) fn(DT_N_S_gpio_keys) fn(DT_N_S_antenna_mux0) fn(DT_N_S_leds) fn(DT_N_S_sensor_switch)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_11000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_antenna_mux0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sensor_switch)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_memory_11000000, __VA_ARGS__) fn(DT_N_S_system_clock, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_antenna_mux0, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_sensor_switch, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_11000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_antenna_mux0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sensor_switch, __VA_ARGS__)

/* Node's hash: */
#define DT_N_HASH il7asoJjJEMhngUeSt4tHVu8Zxx4EFG_FDeJfL3_oPE

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /soc */ \
	10, /* /antenna_mux0 */ \
	11, /* /chosen */ \
	12, /* /memory@11000000 */ \
	13, /* /memory@20000000 */ \
	14, /* /cpus */ \
	19, /* /gpio_keys */ \
	21, /* /leds */ \
	28, /* /sensor-switch */ \
	35, /* /system-clock */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_beagle_beagleconnect_freedom DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_beagle_beagleconnect_freedom 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "BeagleBoard.org Foundation"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "beagleconnect-freedom"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"beagle,beagleconnect-freedom"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "beagle,beagleconnect-freedom"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED beagle,beagleconnect-freedom
#define DT_N_P_compatible_IDX_0_STRING_TOKEN beagle_beagleconnect_freedom
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN BEAGLE_BEAGLECONNECT_FREEDOM
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_aliases_HASH QavYY6yplHKhLPRKsRzaLCGlR0CWZ0JUNJakcBCfDXA

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 19
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 13
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc_S_gpio_40022000) fn(DT_N_S_soc_S_random_40028000) fn(DT_N_S_soc_S_flash_controller_40030000) fn(DT_N_S_soc_S_timer_40010000) fn(DT_N_S_soc_S_timer_40011000) fn(DT_N_S_soc_S_timer_40012000) fn(DT_N_S_soc_S_timer_40013000) fn(DT_N_S_soc_S_uart_40001000) fn(DT_N_S_soc_S_uart_4000b000) fn(DT_N_S_soc_S_i2c_40002000) fn(DT_N_S_soc_S_spi_40000000) fn(DT_N_S_soc_S_spi_40008000) fn(DT_N_S_soc_S_rtc_40092000) fn(DT_N_S_soc_S_radio_40040000) fn(DT_N_S_soc_S_watchdog_40080000) fn(DT_N_S_soc_S_adc_400cb008)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_40028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40011000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40012000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_4000b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40092000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40080000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_random_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40092000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40080000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_40028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40011000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40012000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_4000b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40092000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40080000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc_S_gpio_40022000) fn(DT_N_S_soc_S_random_40028000) fn(DT_N_S_soc_S_flash_controller_40030000) fn(DT_N_S_soc_S_timer_40010000) fn(DT_N_S_soc_S_timer_40011000) fn(DT_N_S_soc_S_uart_40001000) fn(DT_N_S_soc_S_uart_4000b000) fn(DT_N_S_soc_S_i2c_40002000) fn(DT_N_S_soc_S_spi_40000000) fn(DT_N_S_soc_S_rtc_40092000) fn(DT_N_S_soc_S_adc_400cb008)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_40028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40011000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_4000b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40092000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_random_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40092000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_40028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40011000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_4000b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40092000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_HASH DcVqqq9YzG86l3_Hk7pNncUh2rnHG8USjbVY6wBdFts

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 2
#define DT_N_S_soc_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	3, /* /soc/interrupt-controller@e000e100 */ \
	4, /* /soc/gpio@40022000 */ \
	5, /* /soc/pinctrl@40081000 */ \
	27, /* /soc/i2c@40002000 */ \
	31, /* /soc/random@40028000 */ \
	32, /* /soc/rtc@40092000 */ \
	33, /* /soc/spi@40008000 */ \
	34, /* /soc/timer@e000e010 */ \
	38, /* /soc/uart@40001000 */ \
	41, /* /soc/uart@4000b000 */ \
	42, /* /soc/watchdog@40080000 */ \
	43, /* /soc/adc@400cb008 */ \
	50, /* /soc/flash-controller@40030000 */ \
	57, /* /soc/radio@40040000 */ \
	66, /* /soc/spi@40000000 */ \
	72, /* /soc/timer@40010000 */ \
	75, /* /soc/timer@40011000 */ \
	78, /* /soc/timer@40012000 */ \
	80, /* /soc/timer@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UNQUOTED interrupt-controller@e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_TOKEN interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_E000E100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_HASH MNKByYDCdVxyLwiy4A_bv2jZfVhfDT01mZ2_1uEhUYQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	4, /* /soc/gpio@40022000 */ \
	27, /* /soc/i2c@40002000 */ \
	31, /* /soc/random@40028000 */ \
	32, /* /soc/rtc@40092000 */ \
	33, /* /soc/spi@40008000 */ \
	38, /* /soc/uart@40001000 */ \
	41, /* /soc/uart@4000b000 */ \
	42, /* /soc/watchdog@40080000 */ \
	43, /* /soc/adc@400cb008 */ \
	66, /* /soc/spi@40000000 */ \
	72, /* /soc/timer@40010000 */ \
	75, /* /soc/timer@40011000 */ \
	78, /* /soc/timer@40012000 */ \
	80, /* /soc/timer@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@40022000
 *
 * Node identifier: DT_N_S_soc_S_gpio_40022000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/ti,cc13xx-cc26xx-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_40022000_PATH "/soc/gpio@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_40022000_FULL_NAME "gpio@40022000"
#define DT_N_S_soc_S_gpio_40022000_FULL_NAME_UNQUOTED gpio@40022000
#define DT_N_S_soc_S_gpio_40022000_FULL_NAME_TOKEN gpio_40022000
#define DT_N_S_soc_S_gpio_40022000_FULL_NAME_UPPER_TOKEN GPIO_40022000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_40022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_40022000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_40022000_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_40022000_FOREACH_NODELABEL(fn) fn(gpio0)
#define DT_N_S_soc_S_gpio_40022000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40022000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_40022000_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_40022000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_40022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_40022000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_40022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_40022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_40022000_HASH zjy64yL4q9nKbRDfgAjlb4WHO2YuUoAdC053xgJzRVE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_40022000_ORD 4
#define DT_N_S_soc_S_gpio_40022000_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_40022000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_40022000_SUPPORTS_ORDS \
	10, /* /antenna_mux0 */ \
	19, /* /gpio_keys */ \
	20, /* /gpio_keys/button_0 */ \
	21, /* /leds */ \
	22, /* /leds/led_0 */ \
	28, /* /sensor-switch */ \
	66, /* /soc/spi@40000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_40022000_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_gpio DT_N_S_soc_S_gpio_40022000
#define DT_N_NODELABEL_gpio0              DT_N_S_soc_S_gpio_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_40022000_REG_NUM 1
#define DT_N_S_soc_S_gpio_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_gpio_40022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_gpio_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_gpio_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_gpio_40022000_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_40022000_COMPAT_MATCHES_ti_cc13xx_cc26xx_gpio 1
#define DT_N_S_soc_S_gpio_40022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_gpio_40022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-gpio"
#define DT_N_S_soc_S_gpio_40022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_40022000_P_reg {1073881088 /* 0x40022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_gpio_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_gpio_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_gpio_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_interrupts {0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_40022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_gpio_40022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_40022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_40022000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_ngpios 32
#define DT_N_S_soc_S_gpio_40022000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_status "okay"
#define DT_N_S_soc_S_gpio_40022000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_40022000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_40022000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_40022000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_40022000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_40022000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40022000, status, 0)
#define DT_N_S_soc_S_gpio_40022000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40022000, status, 0)
#define DT_N_S_soc_S_gpio_40022000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40022000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40022000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40022000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40022000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_40022000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_compatible {"ti,cc13xx-cc26xx-gpio"}
#define DT_N_S_soc_S_gpio_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-gpio"
#define DT_N_S_soc_S_gpio_40022000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-gpio
#define DT_N_S_soc_S_gpio_40022000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_gpio
#define DT_N_S_soc_S_gpio_40022000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_GPIO
#define DT_N_S_soc_S_gpio_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40022000, compatible, 0)
#define DT_N_S_soc_S_gpio_40022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40022000, compatible, 0)
#define DT_N_S_soc_S_gpio_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40022000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_40022000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_40022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_40022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_40022000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/ti,cc13xx-cc26xx-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_PATH "/soc/pinctrl@40081000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_FULL_NAME "pinctrl@40081000"
#define DT_N_S_soc_S_pinctrl_40081000_FULL_NAME_UNQUOTED pinctrl@40081000
#define DT_N_S_soc_S_pinctrl_40081000_FULL_NAME_TOKEN pinctrl_40081000
#define DT_N_S_soc_S_pinctrl_40081000_FULL_NAME_UPPER_TOKEN PINCTRL_40081000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_CHILD_NUM 20
#define DT_N_S_soc_S_pinctrl_40081000_CHILD_NUM_STATUS_OKAY 20
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default)
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default)
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default)
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default)
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_HASH XCAdmWt1qt276ikfk5zwPwVlQl0TSIObfSQdKe5MthE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_ORD 5
#define DT_N_S_soc_S_pinctrl_40081000_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_SUPPORTS_ORDS \
	6, /* /soc/pinctrl@40081000/board_ant_subg_off */ \
	7, /* /soc/pinctrl@40081000/board_ant_subg_on */ \
	8, /* /soc/pinctrl@40081000/board_ant_tx_pa_off */ \
	9, /* /soc/pinctrl@40081000/board_ant_tx_pa_on */ \
	23, /* /soc/pinctrl@40081000/i2c0_scl_default */ \
	24, /* /soc/pinctrl@40081000/i2c0_scl_sleep */ \
	25, /* /soc/pinctrl@40081000/i2c0_sda_default */ \
	26, /* /soc/pinctrl@40081000/i2c0_sda_sleep */ \
	36, /* /soc/pinctrl@40081000/uart0_rx_default */ \
	37, /* /soc/pinctrl@40081000/uart0_tx_default */ \
	39, /* /soc/pinctrl@40081000/uart1_rx_default */ \
	40, /* /soc/pinctrl@40081000/uart1_tx_default */ \
	60, /* /soc/pinctrl@40081000/spi0_cs0_default */ \
	61, /* /soc/pinctrl@40081000/spi0_cs1_default */ \
	62, /* /soc/pinctrl@40081000/spi0_cs2_default */ \
	63, /* /soc/pinctrl@40081000/spi0_miso_default */ \
	64, /* /soc/pinctrl@40081000/spi0_mosi_default */ \
	65, /* /soc/pinctrl@40081000/spi0_sck_default */ \
	73, /* /soc/pinctrl@40081000/pwm0_default */ \
	76, /* /soc/pinctrl@40081000/pwm1_default */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_pinctrl DT_N_S_soc_S_pinctrl_40081000
#define DT_N_NODELABEL_pinctrl               DT_N_S_soc_S_pinctrl_40081000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_REG_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_REG_IDX_0_VAL_ADDRESS 1074270208 /* 0x40081000 */
#define DT_N_S_soc_S_pinctrl_40081000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pinctrl_40081000_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_COMPAT_MATCHES_ti_cc13xx_cc26xx_pinctrl 1
#define DT_N_S_soc_S_pinctrl_40081000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_pinctrl_40081000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-pinctrl"
#define DT_N_S_soc_S_pinctrl_40081000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_P_reg {1074270208 /* 0x40081000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pinctrl_40081000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_P_reg_IDX_0 1074270208
#define DT_N_S_soc_S_pinctrl_40081000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pinctrl_40081000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible {"ti,cc13xx-cc26xx-pinctrl"}
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-pinctrl"
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-pinctrl
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_pinctrl
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_PINCTRL
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40081000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pinctrl_40081000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40081000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40081000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/board_ant_subg_off
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_PATH "/soc/pinctrl@40081000/board_ant_subg_off"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FULL_NAME "board_ant_subg_off"
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FULL_NAME_UNQUOTED board_ant_subg_off
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FULL_NAME_TOKEN board_ant_subg_off
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FULL_NAME_UPPER_TOKEN BOARD_ANT_SUBG_OFF

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_NODELABEL(fn) fn(board_ant_subg_off)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_NODELABEL_VARGS(fn, ...) fn(board_ant_subg_off, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_HASH AnMd56Fe8IwAe5xZQTCKZONis4HwCQcfS_ewfs6igro

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_ORD 6
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_SUPPORTS_ORDS \
	10, /* /antenna_mux0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_EXISTS 1
#define DT_N_NODELABEL_board_ant_subg_off DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_pinmux {30 /* 0x1e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_pinmux_IDX_0 30
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/board_ant_subg_on
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_PATH "/soc/pinctrl@40081000/board_ant_subg_on"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FULL_NAME "board_ant_subg_on"
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FULL_NAME_UNQUOTED board_ant_subg_on
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FULL_NAME_TOKEN board_ant_subg_on
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FULL_NAME_UPPER_TOKEN BOARD_ANT_SUBG_ON

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_NODELABEL(fn) fn(board_ant_subg_on)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_NODELABEL_VARGS(fn, ...) fn(board_ant_subg_on, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_HASH zeMSB_JJT7E_RCKvUY5NfNR4Amd2DEQOEfiPTx3YBXw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_ORD 7
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_SUPPORTS_ORDS \
	10, /* /antenna_mux0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_EXISTS 1
#define DT_N_NODELABEL_board_ant_subg_on DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_pinmux {30 /* 0x1e */, 47 /* 0x2f */}
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_pinmux_IDX_0 30
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_pinmux_IDX_1 47
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/board_ant_tx_pa_off
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_PATH "/soc/pinctrl@40081000/board_ant_tx_pa_off"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FULL_NAME "board_ant_tx_pa_off"
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FULL_NAME_UNQUOTED board_ant_tx_pa_off
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FULL_NAME_TOKEN board_ant_tx_pa_off
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FULL_NAME_UPPER_TOKEN BOARD_ANT_TX_PA_OFF

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_NODELABEL(fn) fn(board_ant_tx_pa_off)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_NODELABEL_VARGS(fn, ...) fn(board_ant_tx_pa_off, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_HASH rkS2F_FdQq3gQ69wmjlneLt0riX2iAFjGDu1dpjBz5M

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_ORD 8
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_SUPPORTS_ORDS \
	10, /* /antenna_mux0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_EXISTS 1
#define DT_N_NODELABEL_board_ant_tx_pa_off DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_pinmux {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_pinmux_IDX_0 29
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/board_ant_tx_pa_on
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_PATH "/soc/pinctrl@40081000/board_ant_tx_pa_on"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FULL_NAME "board_ant_tx_pa_on"
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FULL_NAME_UNQUOTED board_ant_tx_pa_on
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FULL_NAME_TOKEN board_ant_tx_pa_on
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FULL_NAME_UPPER_TOKEN BOARD_ANT_TX_PA_ON

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_NODELABEL(fn) fn(board_ant_tx_pa_on)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_NODELABEL_VARGS(fn, ...) fn(board_ant_tx_pa_on, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_HASH F_ShEb4WwJhtEYqIYb5NxC_4Uj3sunvukNw36omFS_w

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_ORD 9
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_SUPPORTS_ORDS \
	10, /* /antenna_mux0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_EXISTS 1
#define DT_N_NODELABEL_board_ant_tx_pa_on DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_pinmux {29 /* 0x1d */, 50 /* 0x32 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_pinmux_IDX_0 29
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_pinmux_IDX_1 50
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /antenna_mux0
 *
 * Node identifier: DT_N_S_antenna_mux0
 *
 * Binding (compatible = skyworks,sky13317):
 *   $ZEPHYR_BASE/dts/bindings/misc/skyworks,sky13317.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_antenna_mux0_PATH "/antenna_mux0"

/* Node's name with unit-address: */
#define DT_N_S_antenna_mux0_FULL_NAME "antenna_mux0"
#define DT_N_S_antenna_mux0_FULL_NAME_UNQUOTED antenna_mux0
#define DT_N_S_antenna_mux0_FULL_NAME_TOKEN antenna_mux0
#define DT_N_S_antenna_mux0_FULL_NAME_UPPER_TOKEN ANTENNA_MUX0

/* Node parent (/) identifier: */
#define DT_N_S_antenna_mux0_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_antenna_mux0_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_antenna_mux0_NODELABEL_NUM 1
#define DT_N_S_antenna_mux0_FOREACH_NODELABEL(fn) fn(antenna_mux0)
#define DT_N_S_antenna_mux0_FOREACH_NODELABEL_VARGS(fn, ...) fn(antenna_mux0, __VA_ARGS__)
#define DT_N_S_antenna_mux0_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_antenna_mux0_CHILD_NUM 0
#define DT_N_S_antenna_mux0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_antenna_mux0_FOREACH_CHILD(fn) 
#define DT_N_S_antenna_mux0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_antenna_mux0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_antenna_mux0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_antenna_mux0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_antenna_mux0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_antenna_mux0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_antenna_mux0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_antenna_mux0_HASH KeXHPzAge4NuSGv_Wt71_ojwywh8IuKHy4Rm1_hQIGo

/* Node's dependency ordinal: */
#define DT_N_S_antenna_mux0_ORD 10
#define DT_N_S_antenna_mux0_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_antenna_mux0_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /soc/gpio@40022000 */ \
	6, /* /soc/pinctrl@40081000/board_ant_subg_off */ \
	7, /* /soc/pinctrl@40081000/board_ant_subg_on */ \
	8, /* /soc/pinctrl@40081000/board_ant_tx_pa_off */ \
	9, /* /soc/pinctrl@40081000/board_ant_tx_pa_on */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_antenna_mux0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_antenna_mux0_EXISTS 1
#define DT_N_INST_0_skyworks_sky13317 DT_N_S_antenna_mux0
#define DT_N_NODELABEL_antenna_mux0   DT_N_S_antenna_mux0

/* Macros for properties that are special in the specification: */
#define DT_N_S_antenna_mux0_REG_NUM 0
#define DT_N_S_antenna_mux0_RANGES_NUM 0
#define DT_N_S_antenna_mux0_FOREACH_RANGE(fn) 
#define DT_N_S_antenna_mux0_IRQ_NUM 0
#define DT_N_S_antenna_mux0_IRQ_LEVEL 0
#define DT_N_S_antenna_mux0_COMPAT_MATCHES_skyworks_sky13317 1
#define DT_N_S_antenna_mux0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_antenna_mux0_COMPAT_VENDOR_IDX_0 "Skyworks Solutions, Inc."
#define DT_N_S_antenna_mux0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_antenna_mux0_COMPAT_MODEL_IDX_0 "sky13317"
#define DT_N_S_antenna_mux0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_antenna_mux0_PINCTRL_NUM 3
#define DT_N_S_antenna_mux0_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_antenna_mux0_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_antenna_mux0_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_antenna_mux0_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_antenna_mux0_PINCTRL_NAME_default_IDX 0
#define DT_N_S_antenna_mux0_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off
#define DT_N_S_antenna_mux0_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off
#define DT_N_S_antenna_mux0_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_antenna_mux0_PINCTRL_IDX_1_TOKEN ant_subg
#define DT_N_S_antenna_mux0_PINCTRL_IDX_1_UPPER_TOKEN ANT_SUBG
#define DT_N_S_antenna_mux0_PINCTRL_NAME_ant_subg_EXISTS 1
#define DT_N_S_antenna_mux0_PINCTRL_NAME_ant_subg_IDX 1
#define DT_N_S_antenna_mux0_PINCTRL_NAME_ant_subg_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off
#define DT_N_S_antenna_mux0_PINCTRL_NAME_ant_subg_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on
#define DT_N_S_antenna_mux0_PINCTRL_IDX_2_EXISTS 1
#define DT_N_S_antenna_mux0_PINCTRL_IDX_2_TOKEN ant_subg_pa
#define DT_N_S_antenna_mux0_PINCTRL_IDX_2_UPPER_TOKEN ANT_SUBG_PA
#define DT_N_S_antenna_mux0_PINCTRL_NAME_ant_subg_pa_EXISTS 1
#define DT_N_S_antenna_mux0_PINCTRL_NAME_ant_subg_pa_IDX 2
#define DT_N_S_antenna_mux0_PINCTRL_NAME_ant_subg_pa_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on
#define DT_N_S_antenna_mux0_PINCTRL_NAME_ant_subg_pa_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on

/* Generic property macros: */
#define DT_N_S_antenna_mux0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_antenna_mux0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_40022000
#define DT_N_S_antenna_mux0_P_gpios_IDX_0_VAL_pin 29
#define DT_N_S_antenna_mux0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_antenna_mux0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_antenna_mux0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_antenna_mux0_P_gpios_IDX_1_EXISTS 1
#define DT_N_S_antenna_mux0_P_gpios_IDX_1_PH DT_N_S_soc_S_gpio_40022000
#define DT_N_S_antenna_mux0_P_gpios_IDX_1_VAL_pin 30
#define DT_N_S_antenna_mux0_P_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_antenna_mux0_P_gpios_IDX_1_VAL_flags 0
#define DT_N_S_antenna_mux0_P_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_antenna_mux0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_antenna_mux0, gpios, 0) \
	fn(DT_N_S_antenna_mux0, gpios, 1)
#define DT_N_S_antenna_mux0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_antenna_mux0, gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, gpios, 1)
#define DT_N_S_antenna_mux0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_antenna_mux0, gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_antenna_mux0, gpios, 1, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_antenna_mux0, gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, gpios, 1, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_gpios_LEN 2
#define DT_N_S_antenna_mux0_P_gpios_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off
#define DT_N_S_antenna_mux0_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off
#define DT_N_S_antenna_mux0_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off
#define DT_N_S_antenna_mux0_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off
#define DT_N_S_antenna_mux0_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_antenna_mux0, pinctrl_0, 0) \
	fn(DT_N_S_antenna_mux0, pinctrl_0, 1)
#define DT_N_S_antenna_mux0_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_antenna_mux0, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, pinctrl_0, 1)
#define DT_N_S_antenna_mux0_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_antenna_mux0, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_antenna_mux0, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_antenna_mux0, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_pinctrl_0_LEN 2
#define DT_N_S_antenna_mux0_P_pinctrl_0_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_1_IDX_0 DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off
#define DT_N_S_antenna_mux0_P_pinctrl_1_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off
#define DT_N_S_antenna_mux0_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_1_IDX_1 DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on
#define DT_N_S_antenna_mux0_P_pinctrl_1_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on
#define DT_N_S_antenna_mux0_P_pinctrl_1_IDX_1_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_antenna_mux0, pinctrl_1, 0) \
	fn(DT_N_S_antenna_mux0, pinctrl_1, 1)
#define DT_N_S_antenna_mux0_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_antenna_mux0, pinctrl_1, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, pinctrl_1, 1)
#define DT_N_S_antenna_mux0_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_antenna_mux0, pinctrl_1, 0, __VA_ARGS__) \
	fn(DT_N_S_antenna_mux0, pinctrl_1, 1, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_antenna_mux0, pinctrl_1, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, pinctrl_1, 1, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_pinctrl_1_LEN 2
#define DT_N_S_antenna_mux0_P_pinctrl_1_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_2_IDX_0 DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on
#define DT_N_S_antenna_mux0_P_pinctrl_2_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on
#define DT_N_S_antenna_mux0_P_pinctrl_2_IDX_0_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_2_IDX_1 DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on
#define DT_N_S_antenna_mux0_P_pinctrl_2_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on
#define DT_N_S_antenna_mux0_P_pinctrl_2_IDX_1_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_2_FOREACH_PROP_ELEM(fn) fn(DT_N_S_antenna_mux0, pinctrl_2, 0) \
	fn(DT_N_S_antenna_mux0, pinctrl_2, 1)
#define DT_N_S_antenna_mux0_P_pinctrl_2_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_antenna_mux0, pinctrl_2, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, pinctrl_2, 1)
#define DT_N_S_antenna_mux0_P_pinctrl_2_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_antenna_mux0, pinctrl_2, 0, __VA_ARGS__) \
	fn(DT_N_S_antenna_mux0, pinctrl_2, 1, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_pinctrl_2_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_antenna_mux0, pinctrl_2, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, pinctrl_2, 1, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_pinctrl_2_LEN 2
#define DT_N_S_antenna_mux0_P_pinctrl_2_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_names {"default", "ant_subg", "ant_subg_pa"}
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_1 "ant_subg"
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_1_STRING_UNQUOTED ant_subg
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_1_STRING_TOKEN ant_subg
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN ANT_SUBG
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_2_EXISTS 1
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_2 "ant_subg_pa"
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_2_STRING_UNQUOTED ant_subg_pa
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_2_STRING_TOKEN ant_subg_pa
#define DT_N_S_antenna_mux0_P_pinctrl_names_IDX_2_STRING_UPPER_TOKEN ANT_SUBG_PA
#define DT_N_S_antenna_mux0_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_antenna_mux0, pinctrl_names, 0) \
	fn(DT_N_S_antenna_mux0, pinctrl_names, 1) \
	fn(DT_N_S_antenna_mux0, pinctrl_names, 2)
#define DT_N_S_antenna_mux0_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_antenna_mux0, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, pinctrl_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, pinctrl_names, 2)
#define DT_N_S_antenna_mux0_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_antenna_mux0, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_antenna_mux0, pinctrl_names, 1, __VA_ARGS__) \
	fn(DT_N_S_antenna_mux0, pinctrl_names, 2, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_antenna_mux0, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, pinctrl_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_antenna_mux0, pinctrl_names, 2, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_pinctrl_names_LEN 3
#define DT_N_S_antenna_mux0_P_pinctrl_names_EXISTS 1
#define DT_N_S_antenna_mux0_P_status "okay"
#define DT_N_S_antenna_mux0_P_status_STRING_UNQUOTED okay
#define DT_N_S_antenna_mux0_P_status_STRING_TOKEN okay
#define DT_N_S_antenna_mux0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_antenna_mux0_P_status_IDX_0 "okay"
#define DT_N_S_antenna_mux0_P_status_IDX_0_EXISTS 1
#define DT_N_S_antenna_mux0_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_antenna_mux0_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_antenna_mux0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_antenna_mux0, status, 0)
#define DT_N_S_antenna_mux0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_antenna_mux0, status, 0)
#define DT_N_S_antenna_mux0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_antenna_mux0, status, 0, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_antenna_mux0, status, 0, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_status_LEN 1
#define DT_N_S_antenna_mux0_P_status_EXISTS 1
#define DT_N_S_antenna_mux0_P_compatible {"skyworks,sky13317"}
#define DT_N_S_antenna_mux0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_antenna_mux0_P_compatible_IDX_0 "skyworks,sky13317"
#define DT_N_S_antenna_mux0_P_compatible_IDX_0_STRING_UNQUOTED skyworks,sky13317
#define DT_N_S_antenna_mux0_P_compatible_IDX_0_STRING_TOKEN skyworks_sky13317
#define DT_N_S_antenna_mux0_P_compatible_IDX_0_STRING_UPPER_TOKEN SKYWORKS_SKY13317
#define DT_N_S_antenna_mux0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_antenna_mux0, compatible, 0)
#define DT_N_S_antenna_mux0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_antenna_mux0, compatible, 0)
#define DT_N_S_antenna_mux0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_antenna_mux0, compatible, 0, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_antenna_mux0, compatible, 0, __VA_ARGS__)
#define DT_N_S_antenna_mux0_P_compatible_LEN 1
#define DT_N_S_antenna_mux0_P_compatible_EXISTS 1
#define DT_N_S_antenna_mux0_P_zephyr_deferred_init 0
#define DT_N_S_antenna_mux0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_antenna_mux0_P_wakeup_source 0
#define DT_N_S_antenna_mux0_P_wakeup_source_EXISTS 1
#define DT_N_S_antenna_mux0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_antenna_mux0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_chosen_HASH qNExeeLInzqaWpm1KroyYDk4lRIxVO2ig78mq_hOnA8

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 11
#define DT_N_S_chosen_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /memory@11000000
 *
 * Node identifier: DT_N_S_memory_11000000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_11000000_PATH "/memory@11000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_11000000_FULL_NAME "memory@11000000"
#define DT_N_S_memory_11000000_FULL_NAME_UNQUOTED memory@11000000
#define DT_N_S_memory_11000000_FULL_NAME_TOKEN memory_11000000
#define DT_N_S_memory_11000000_FULL_NAME_UPPER_TOKEN MEMORY_11000000

/* Node parent (/) identifier: */
#define DT_N_S_memory_11000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_11000000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_11000000_NODELABEL_NUM 1
#define DT_N_S_memory_11000000_FOREACH_NODELABEL(fn) fn(sram1)
#define DT_N_S_memory_11000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram1, __VA_ARGS__)
#define DT_N_S_memory_11000000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_11000000_CHILD_NUM 0
#define DT_N_S_memory_11000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_11000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_11000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_11000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_11000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_11000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_11000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_11000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_11000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory_11000000_HASH zWbJiTwxrbVUH9UmOjMe19rVnMQy03btkK6iacbUmys

/* Node's dependency ordinal: */
#define DT_N_S_memory_11000000_ORD 12
#define DT_N_S_memory_11000000_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_11000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_11000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_11000000_EXISTS 1
#define DT_N_INST_1_zephyr_memory_region DT_N_S_memory_11000000
#define DT_N_INST_1_mmio_sram            DT_N_S_memory_11000000
#define DT_N_NODELABEL_sram1             DT_N_S_memory_11000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_11000000_REG_NUM 1
#define DT_N_S_memory_11000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_11000000_REG_IDX_0_VAL_ADDRESS 285212672 /* 0x11000000 */
#define DT_N_S_memory_11000000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_memory_11000000_RANGES_NUM 0
#define DT_N_S_memory_11000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_11000000_IRQ_NUM 0
#define DT_N_S_memory_11000000_IRQ_LEVEL 0
#define DT_N_S_memory_11000000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_memory_11000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_memory_11000000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_memory_11000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_memory_11000000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_memory_11000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_11000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_11000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_11000000_P_zephyr_memory_region "SRAM1"
#define DT_N_S_memory_11000000_P_zephyr_memory_region_STRING_UNQUOTED SRAM1
#define DT_N_S_memory_11000000_P_zephyr_memory_region_STRING_TOKEN SRAM1
#define DT_N_S_memory_11000000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM1
#define DT_N_S_memory_11000000_P_zephyr_memory_region_IDX_0 "SRAM1"
#define DT_N_S_memory_11000000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_memory_11000000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_11000000, zephyr_memory_region, 0)
#define DT_N_S_memory_11000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_11000000, zephyr_memory_region, 0)
#define DT_N_S_memory_11000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_11000000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_11000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_11000000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_11000000_P_zephyr_memory_region_LEN 1
#define DT_N_S_memory_11000000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_memory_11000000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_memory_11000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_11000000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_memory_11000000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_memory_11000000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_memory_11000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_memory_11000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_memory_11000000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_memory_11000000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_11000000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_memory_11000000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_11000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_11000000, compatible, 0) \
	fn(DT_N_S_memory_11000000, compatible, 1)
#define DT_N_S_memory_11000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_11000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_11000000, compatible, 1)
#define DT_N_S_memory_11000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_11000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_11000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_11000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_11000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_11000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_11000000_P_compatible_LEN 2
#define DT_N_S_memory_11000000_P_compatible_EXISTS 1
#define DT_N_S_memory_11000000_P_reg {285212672 /* 0x11000000 */, 8192 /* 0x2000 */}
#define DT_N_S_memory_11000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_11000000_P_reg_IDX_0 285212672
#define DT_N_S_memory_11000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_11000000_P_reg_IDX_1 8192
#define DT_N_S_memory_11000000_P_reg_EXISTS 1
#define DT_N_S_memory_11000000_P_zephyr_deferred_init 0
#define DT_N_S_memory_11000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_11000000_P_wakeup_source 0
#define DT_N_S_memory_11000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_11000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_11000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"
#define DT_N_S_memory_20000000_FULL_NAME_UNQUOTED memory@20000000
#define DT_N_S_memory_20000000_FULL_NAME_TOKEN memory_20000000
#define DT_N_S_memory_20000000_FULL_NAME_UPPER_TOKEN MEMORY_20000000

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20000000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_20000000_NODELABEL_NUM 1
#define DT_N_S_memory_20000000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_memory_20000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)
#define DT_N_S_memory_20000000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_20000000_CHILD_NUM 0
#define DT_N_S_memory_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory_20000000_HASH Ppv28MrjF0V_ocFctWWy62TJJRdbnlSCTerwKpAvZ6U

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 13
#define DT_N_S_memory_20000000_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 147456 /* 0x24000 */
#define DT_N_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_IRQ_LEVEL 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 147456 /* 0x24000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 147456
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory_20000000_P_zephyr_deferred_init 0
#define DT_N_S_memory_20000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 2
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_HASH iL3XRGZVvvtpNJqKV0_jvtuXF7m6kgky4nI2ifizwdg

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 14
#define DT_N_S_cpus_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	15, /* /cpus/power-states */ \
	18, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states
 *
 * Node identifier: DT_N_S_cpus_S_power_states
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_PATH "/cpus/power-states"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_FULL_NAME "power-states"
#define DT_N_S_cpus_S_power_states_FULL_NAME_UNQUOTED power-states
#define DT_N_S_cpus_S_power_states_FULL_NAME_TOKEN power_states
#define DT_N_S_cpus_S_power_states_FULL_NAME_UPPER_TOKEN POWER_STATES

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_power_states_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_NODELABEL_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_CHILD_NUM 2
#define DT_N_S_cpus_S_power_states_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_power_states_S_idle) fn(DT_N_S_cpus_S_power_states_S_standby)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_idle) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_standby)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_standby, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_standby, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_power_states_S_idle) fn(DT_N_S_cpus_S_power_states_S_standby)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_idle) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_standby)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_standby, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_standby, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_S_power_states_HASH qMexuiO6C_SHOSQQCC_3by3odasm1z5VRx723zYLVgY

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_ORD 15
#define DT_N_S_cpus_S_power_states_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_REQUIRES_ORDS \
	14, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_SUPPORTS_ORDS \
	16, /* /cpus/power-states/idle */ \
	17, /* /cpus/power-states/standby */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_REG_NUM 0
#define DT_N_S_cpus_S_power_states_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states/idle
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_idle
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_idle_PATH "/cpus/power-states/idle"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_idle_FULL_NAME "idle"
#define DT_N_S_cpus_S_power_states_S_idle_FULL_NAME_UNQUOTED idle
#define DT_N_S_cpus_S_power_states_S_idle_FULL_NAME_TOKEN idle
#define DT_N_S_cpus_S_power_states_S_idle_FULL_NAME_UPPER_TOKEN IDLE

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_idle_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_idle_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_idle_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_NODELABEL(fn) fn(idle)
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_NODELABEL_VARGS(fn, ...) fn(idle, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_idle_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_idle_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_power_states_S_idle_HASH EZV4RBkZtS_NVHJ_f2xhq6SM5zHQHUkDT5nUL_GLMWo

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_idle_ORD 16
#define DT_N_S_cpus_S_power_states_S_idle_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_idle_REQUIRES_ORDS \
	15, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_idle_SUPPORTS_ORDS \
	18, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_idle_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_cpus_S_power_states_S_idle
#define DT_N_NODELABEL_idle            DT_N_S_cpus_S_power_states_S_idle

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_idle_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_idle_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_idle_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_idle_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_idle_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_idle_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_idle_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_idle_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_idle_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_STRING_UNQUOTED suspend-to-idle
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_IDX_0 "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_IDX_0_ENUM_IDX 2
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_IDX_0_ENUM_VAL_suspend_to_idle_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_idle, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_idle, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_idle, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_idle, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_P_min_residency_us 1000
#define DT_N_S_cpus_S_power_states_S_idle_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_idle_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/power-states/standby
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_standby
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_standby_PATH "/cpus/power-states/standby"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_standby_FULL_NAME "standby"
#define DT_N_S_cpus_S_power_states_S_standby_FULL_NAME_UNQUOTED standby
#define DT_N_S_cpus_S_power_states_S_standby_FULL_NAME_TOKEN standby
#define DT_N_S_cpus_S_power_states_S_standby_FULL_NAME_UPPER_TOKEN STANDBY

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_standby_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_standby_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_standby_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_NODELABEL(fn) fn(standby)
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_NODELABEL_VARGS(fn, ...) fn(standby, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_standby_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_standby_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_power_states_S_standby_HASH 2LUKvkkCO63VCLCvXetmkFnCRquuFS8HuYIMSeCeYGk

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_standby_ORD 17
#define DT_N_S_cpus_S_power_states_S_standby_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_standby_REQUIRES_ORDS \
	15, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_standby_SUPPORTS_ORDS \
	18, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_standby_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_cpus_S_power_states_S_standby
#define DT_N_NODELABEL_standby         DT_N_S_cpus_S_power_states_S_standby

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_standby_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_standby_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_standby_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_standby_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_standby_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_standby_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_standby_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_standby_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_standby_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_standby_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_standby_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_standby_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name "standby"
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_STRING_UNQUOTED standby
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_STRING_TOKEN standby
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_STRING_UPPER_TOKEN STANDBY
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_IDX_0 "standby"
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_IDX_0_ENUM_IDX 3
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_IDX_0_ENUM_VAL_standby_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_standby, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_standby, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_standby, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_standby, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_standby_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_standby_P_min_residency_us 5000
#define DT_N_S_cpus_S_power_states_S_standby_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_standby_P_exit_latency_us 240
#define DT_N_S_cpus_S_power_states_S_standby_P_exit_latency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_standby_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_standby_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_0_HASH Su0JBbOtM0QIxe_1ka2Xvgw4rk1QaIlMIj8Rp_v4yVQ

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 18
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	14, /* /cpus */ \
	16, /* /cpus/power-states/idle */ \
	17, /* /cpus/power-states/standby */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0       DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency 48000000
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_cpus_S_power_states_S_idle
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_cpus_S_power_states_S_idle
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1 DT_N_S_cpus_S_power_states_S_standby
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_cpus_S_power_states_S_standby
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"
#define DT_N_S_gpio_keys_FULL_NAME_UNQUOTED gpio_keys
#define DT_N_S_gpio_keys_FULL_NAME_TOKEN gpio_keys
#define DT_N_S_gpio_keys_FULL_NAME_UPPER_TOKEN GPIO_KEYS

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_NODELABEL_NUM 0
#define DT_N_S_gpio_keys_FOREACH_NODELABEL(fn) 
#define DT_N_S_gpio_keys_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_CHILD_NUM 1
#define DT_N_S_gpio_keys_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_gpio_keys_HASH o_cyM_1oGxkDdZvjWwmF_qWSV_TFQR0RmVqGE69cQ78

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 19
#define DT_N_S_gpio_keys_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /soc/gpio@40022000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	20, /* /gpio_keys/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_debounce_interval_ms 30
#define DT_N_S_gpio_keys_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_gpio_keys_P_polling_mode 0
#define DT_N_S_gpio_keys_P_polling_mode_EXISTS 1
#define DT_N_S_gpio_keys_P_no_disconnect 0
#define DT_N_S_gpio_keys_P_no_disconnect_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_deferred_init 0
#define DT_N_S_gpio_keys_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_gpio_keys_P_wakeup_source 0
#define DT_N_S_gpio_keys_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_0
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_0_PATH "/gpio_keys/button_0"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_0_FULL_NAME "button_0"
#define DT_N_S_gpio_keys_S_button_0_FULL_NAME_UNQUOTED button_0
#define DT_N_S_gpio_keys_S_button_0_FULL_NAME_TOKEN button_0
#define DT_N_S_gpio_keys_S_button_0_FULL_NAME_UPPER_TOKEN BUTTON_0

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_0_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_S_button_0_NODELABEL_NUM 1
#define DT_N_S_gpio_keys_S_button_0_FOREACH_NODELABEL(fn) fn(button0)
#define DT_N_S_gpio_keys_S_button_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(button0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_gpio_keys) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_0_CHILD_NUM 0
#define DT_N_S_gpio_keys_S_button_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_keys_S_button_0_HASH C_Hn3JvE9sI_pLDHANZiWQipVdDvQbayAS5TLiYvirs

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_0_ORD 20
#define DT_N_S_gpio_keys_S_button_0_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_0_REQUIRES_ORDS \
	4, /* /soc/gpio@40022000 */ \
	19, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_button_0
#define DT_N_ALIAS_mcuboot_button0 DT_N_S_gpio_keys_S_button_0
#define DT_N_NODELABEL_button0     DT_N_S_gpio_keys_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_0_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_0_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_0_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_0_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_40022000
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_pin 15
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_zephyr_code 11
#define DT_N_S_gpio_keys_S_button_0_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"
#define DT_N_S_leds_FULL_NAME_UNQUOTED leds
#define DT_N_S_leds_FULL_NAME_TOKEN leds
#define DT_N_S_leds_FULL_NAME_UPPER_TOKEN LEDS

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 1
#define DT_N_S_leds_FOREACH_NODELABEL(fn) fn(leds)
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) fn(leds, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 1
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_leds_HASH bMroFUocDdjE3kJ38dK18mDvlCOPoyya5kIIs76irj8

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 21
#define DT_N_S_leds_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /soc/gpio@40022000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	22, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds
#define DT_N_NODELABEL_leds   DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"
#define DT_N_S_leds_S_led_0_FULL_NAME_UNQUOTED led_0
#define DT_N_S_leds_S_led_0_FULL_NAME_TOKEN led_0
#define DT_N_S_leds_S_led_0_FULL_NAME_UPPER_TOKEN LED_0

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_0_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL(fn) fn(led0)
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(led0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_0_CHILD_NUM 0
#define DT_N_S_leds_S_led_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_0_HASH kqSZv01Dnr_1hPdmxPVlr9u8kLMk_UWHIyVHG3GknSY

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 22
#define DT_N_S_leds_S_led_0_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	4, /* /soc/gpio@40022000 */ \
	21, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_ALIAS_led0     DT_N_S_leds_S_led_0
#define DT_N_NODELABEL_led0 DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_40022000
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 18
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/i2c0_scl_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_PATH "/soc/pinctrl@40081000/i2c0_scl_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FULL_NAME "i2c0_scl_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FULL_NAME_UNQUOTED i2c0_scl_default
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FULL_NAME_TOKEN i2c0_scl_default
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FULL_NAME_UPPER_TOKEN I2C0_SCL_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_NODELABEL(fn) fn(i2c0_scl_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_scl_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_HASH hvNFE2xgJeDylevEUb8_X_wokCqstbtHcICkJi01kMA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_ORD 23
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_SUPPORTS_ORDS \
	27, /* /soc/i2c@40002000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_EXISTS 1
#define DT_N_NODELABEL_i2c0_scl_default DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_pinmux {25 /* 0x19 */, 14 /* 0xe */}
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_pinmux_IDX_0 25
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_pinmux_IDX_1 14
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_bias_disable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_bias_pull_up 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_drive_open_drain 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_input_enable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/i2c0_scl_sleep
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_PATH "/soc/pinctrl@40081000/i2c0_scl_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FULL_NAME "i2c0_scl_sleep"
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FULL_NAME_UNQUOTED i2c0_scl_sleep
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FULL_NAME_TOKEN i2c0_scl_sleep
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FULL_NAME_UPPER_TOKEN I2C0_SCL_SLEEP

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_NODELABEL(fn) fn(i2c0_scl_sleep)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_scl_sleep, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_HASH m7OKlGYdBxvzR19xhTHtCRCgydJ8xmJgpNCWWv145cs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_ORD 24
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_SUPPORTS_ORDS \
	27, /* /soc/i2c@40002000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_EXISTS 1
#define DT_N_NODELABEL_i2c0_scl_sleep DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_pinmux {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_pinmux_IDX_0 25
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/i2c0_sda_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_PATH "/soc/pinctrl@40081000/i2c0_sda_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FULL_NAME "i2c0_sda_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FULL_NAME_UNQUOTED i2c0_sda_default
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FULL_NAME_TOKEN i2c0_sda_default
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FULL_NAME_UPPER_TOKEN I2C0_SDA_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_NODELABEL(fn) fn(i2c0_sda_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_sda_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_HASH ldS4PgRSjFH7wK4fEUavLGZObbcseIoG0BQYdpeWpoE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_ORD 25
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_SUPPORTS_ORDS \
	27, /* /soc/i2c@40002000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_EXISTS 1
#define DT_N_NODELABEL_i2c0_sda_default DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_pinmux {26 /* 0x1a */, 13 /* 0xd */}
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_pinmux_IDX_0 26
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_pinmux_IDX_1 13
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_bias_disable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_bias_pull_up 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_drive_open_drain 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_input_enable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/i2c0_sda_sleep
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_PATH "/soc/pinctrl@40081000/i2c0_sda_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FULL_NAME "i2c0_sda_sleep"
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FULL_NAME_UNQUOTED i2c0_sda_sleep
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FULL_NAME_TOKEN i2c0_sda_sleep
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FULL_NAME_UPPER_TOKEN I2C0_SDA_SLEEP

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_NODELABEL(fn) fn(i2c0_sda_sleep)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_sda_sleep, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_HASH uGu5v5rWd2s1xrtTHpi3_GJ9ooEzxyXaCNxKU47AdVw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_ORD 26
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_SUPPORTS_ORDS \
	27, /* /soc/i2c@40002000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_EXISTS 1
#define DT_N_NODELABEL_i2c0_sda_sleep DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_pinmux {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_pinmux_IDX_0 26
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40002000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40002000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/ti,cc13xx-cc26xx-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40002000_PATH "/soc/i2c@40002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40002000_FULL_NAME "i2c@40002000"
#define DT_N_S_soc_S_i2c_40002000_FULL_NAME_UNQUOTED i2c@40002000
#define DT_N_S_soc_S_i2c_40002000_FULL_NAME_TOKEN i2c_40002000
#define DT_N_S_soc_S_i2c_40002000_FULL_NAME_UPPER_TOKEN I2C_40002000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40002000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40002000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40002000_FOREACH_NODELABEL(fn) fn(i2c0)
#define DT_N_S_soc_S_i2c_40002000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40002000_CHILD_NUM 1
#define DT_N_S_soc_S_i2c_40002000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_i2c_40002000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4)
#define DT_N_S_soc_S_i2c_40002000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4)
#define DT_N_S_soc_S_i2c_40002000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4)
#define DT_N_S_soc_S_i2c_40002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4)
#define DT_N_S_soc_S_i2c_40002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40002000_HASH am_SL6b6LY5Zb7ubmZ5MesQfWlShdMkP8SOCqfTDQUc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40002000_ORD 27
#define DT_N_S_soc_S_i2c_40002000_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40002000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */ \
	23, /* /soc/pinctrl@40081000/i2c0_scl_default */ \
	24, /* /soc/pinctrl@40081000/i2c0_scl_sleep */ \
	25, /* /soc/pinctrl@40081000/i2c0_sda_default */ \
	26, /* /soc/pinctrl@40081000/i2c0_sda_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40002000_SUPPORTS_ORDS \
	28, /* /sensor-switch */ \
	56, /* /soc/i2c@40002000/msp430-usbbridge@4 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40002000_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_i2c DT_N_S_soc_S_i2c_40002000
#define DT_N_NODELABEL_i2c0              DT_N_S_soc_S_i2c_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40002000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_i2c_40002000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40002000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_IRQ_IDX_0_VAL_irq 1
#define DT_N_S_soc_S_i2c_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40002000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40002000_COMPAT_MATCHES_ti_cc13xx_cc26xx_i2c 1
#define DT_N_S_soc_S_i2c_40002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_i2c_40002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-i2c"
#define DT_N_S_soc_S_i2c_40002000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_NUM 2
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep
#define DT_N_S_soc_S_i2c_40002000_PINCTRL_NAME_sleep_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40002000_P_reg {1073750016 /* 0x40002000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_i2c_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_interrupts {1 /* 0x1 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_interrupts_IDX_0 1
#define DT_N_S_soc_S_i2c_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40002000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_sq_size 4
#define DT_N_S_soc_S_i2c_40002000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_cq_size 4
#define DT_N_S_soc_S_i2c_40002000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_status "okay"
#define DT_N_S_soc_S_i2c_40002000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40002000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40002000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40002000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40002000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40002000, status, 0)
#define DT_N_S_soc_S_i2c_40002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40002000, status, 0)
#define DT_N_S_soc_S_i2c_40002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40002000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_compatible {"ti,cc13xx-cc26xx-i2c"}
#define DT_N_S_soc_S_i2c_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-i2c"
#define DT_N_S_soc_S_i2c_40002000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-i2c
#define DT_N_S_soc_S_i2c_40002000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_i2c
#define DT_N_S_soc_S_i2c_40002000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_I2C
#define DT_N_S_soc_S_i2c_40002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40002000, compatible, 0)
#define DT_N_S_soc_S_i2c_40002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40002000, compatible, 0)
#define DT_N_S_soc_S_i2c_40002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40002000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40002000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_IDX_0 DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_IDX_1 DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_1, 0) \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_1, 1)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_1, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_1, 1)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_1, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_1, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_LEN 2
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_names, 1)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_names, 1)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40002000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40002000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_i2c_40002000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /sensor-switch
 *
 * Node identifier: DT_N_S_sensor_switch
 *
 * Binding (compatible = gpio-i2c-switch):
 *   $ZEPHYR_BASE/dts/bindings/i2c/gpio-i2c-switch.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_sensor_switch_PATH "/sensor-switch"

/* Node's name with unit-address: */
#define DT_N_S_sensor_switch_FULL_NAME "sensor-switch"
#define DT_N_S_sensor_switch_FULL_NAME_UNQUOTED sensor-switch
#define DT_N_S_sensor_switch_FULL_NAME_TOKEN sensor_switch
#define DT_N_S_sensor_switch_FULL_NAME_UPPER_TOKEN SENSOR_SWITCH

/* Node parent (/) identifier: */
#define DT_N_S_sensor_switch_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_sensor_switch_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_sensor_switch_NODELABEL_NUM 1
#define DT_N_S_sensor_switch_FOREACH_NODELABEL(fn) fn(sens_i2c)
#define DT_N_S_sensor_switch_FOREACH_NODELABEL_VARGS(fn, ...) fn(sens_i2c, __VA_ARGS__)
#define DT_N_S_sensor_switch_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_sensor_switch_CHILD_NUM 2
#define DT_N_S_sensor_switch_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_sensor_switch_FOREACH_CHILD(fn) fn(DT_N_S_sensor_switch_S_opt3001_light_44) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41)
#define DT_N_S_sensor_switch_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_sensor_switch_S_opt3001_light_44) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41)
#define DT_N_S_sensor_switch_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_sensor_switch_S_opt3001_light_44, __VA_ARGS__) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, __VA_ARGS__)
#define DT_N_S_sensor_switch_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sensor_switch_S_opt3001_light_44, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, __VA_ARGS__)
#define DT_N_S_sensor_switch_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_sensor_switch_S_opt3001_light_44) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41)
#define DT_N_S_sensor_switch_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_sensor_switch_S_opt3001_light_44) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41)
#define DT_N_S_sensor_switch_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_sensor_switch_S_opt3001_light_44, __VA_ARGS__) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, __VA_ARGS__)
#define DT_N_S_sensor_switch_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sensor_switch_S_opt3001_light_44, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_sensor_switch_HASH eukE6cfvG8E0wgJwNpwt_H3ga_KkOLc7ZzotGZMjL08

/* Node's dependency ordinal: */
#define DT_N_S_sensor_switch_ORD 28
#define DT_N_S_sensor_switch_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sensor_switch_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /soc/gpio@40022000 */ \
	27, /* /soc/i2c@40002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sensor_switch_SUPPORTS_ORDS \
	29, /* /sensor-switch/hdc2010-humidity@41 */ \
	30, /* /sensor-switch/opt3001-light@44 */

/* Existence and alternate IDs: */
#define DT_N_S_sensor_switch_EXISTS 1
#define DT_N_INST_0_gpio_i2c_switch DT_N_S_sensor_switch
#define DT_N_NODELABEL_sens_i2c     DT_N_S_sensor_switch

/* Macros for properties that are special in the specification: */
#define DT_N_S_sensor_switch_REG_NUM 0
#define DT_N_S_sensor_switch_RANGES_NUM 0
#define DT_N_S_sensor_switch_FOREACH_RANGE(fn) 
#define DT_N_S_sensor_switch_IRQ_NUM 0
#define DT_N_S_sensor_switch_IRQ_LEVEL 0
#define DT_N_S_sensor_switch_COMPAT_MATCHES_gpio_i2c_switch 1
#define DT_N_S_sensor_switch_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_sensor_switch_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_sensor_switch_P_controller DT_N_S_soc_S_i2c_40002000
#define DT_N_S_sensor_switch_P_controller_IDX_0 DT_N_S_soc_S_i2c_40002000
#define DT_N_S_sensor_switch_P_controller_IDX_0_PH DT_N_S_soc_S_i2c_40002000
#define DT_N_S_sensor_switch_P_controller_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_P_controller_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sensor_switch, controller, 0)
#define DT_N_S_sensor_switch_P_controller_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sensor_switch, controller, 0)
#define DT_N_S_sensor_switch_P_controller_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sensor_switch, controller, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_P_controller_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sensor_switch, controller, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_P_controller_LEN 1
#define DT_N_S_sensor_switch_P_controller_EXISTS 1
#define DT_N_S_sensor_switch_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_40022000
#define DT_N_S_sensor_switch_P_gpios_IDX_0_VAL_pin 14
#define DT_N_S_sensor_switch_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_sensor_switch_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_sensor_switch_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_sensor_switch_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sensor_switch, gpios, 0)
#define DT_N_S_sensor_switch_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sensor_switch, gpios, 0)
#define DT_N_S_sensor_switch_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sensor_switch, gpios, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sensor_switch, gpios, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_P_gpios_LEN 1
#define DT_N_S_sensor_switch_P_gpios_EXISTS 1
#define DT_N_S_sensor_switch_P_sq_size 4
#define DT_N_S_sensor_switch_P_sq_size_EXISTS 1
#define DT_N_S_sensor_switch_P_cq_size 4
#define DT_N_S_sensor_switch_P_cq_size_EXISTS 1
#define DT_N_S_sensor_switch_P_status "okay"
#define DT_N_S_sensor_switch_P_status_STRING_UNQUOTED okay
#define DT_N_S_sensor_switch_P_status_STRING_TOKEN okay
#define DT_N_S_sensor_switch_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_sensor_switch_P_status_IDX_0 "okay"
#define DT_N_S_sensor_switch_P_status_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_sensor_switch_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_sensor_switch_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sensor_switch, status, 0)
#define DT_N_S_sensor_switch_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sensor_switch, status, 0)
#define DT_N_S_sensor_switch_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sensor_switch, status, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sensor_switch, status, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_P_status_LEN 1
#define DT_N_S_sensor_switch_P_status_EXISTS 1
#define DT_N_S_sensor_switch_P_compatible {"gpio-i2c-switch"}
#define DT_N_S_sensor_switch_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_P_compatible_IDX_0 "gpio-i2c-switch"
#define DT_N_S_sensor_switch_P_compatible_IDX_0_STRING_UNQUOTED gpio-i2c-switch
#define DT_N_S_sensor_switch_P_compatible_IDX_0_STRING_TOKEN gpio_i2c_switch
#define DT_N_S_sensor_switch_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_I2C_SWITCH
#define DT_N_S_sensor_switch_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sensor_switch, compatible, 0)
#define DT_N_S_sensor_switch_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sensor_switch, compatible, 0)
#define DT_N_S_sensor_switch_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sensor_switch, compatible, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sensor_switch, compatible, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_P_compatible_LEN 1
#define DT_N_S_sensor_switch_P_compatible_EXISTS 1
#define DT_N_S_sensor_switch_P_zephyr_deferred_init 0
#define DT_N_S_sensor_switch_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_sensor_switch_P_wakeup_source 0
#define DT_N_S_sensor_switch_P_wakeup_source_EXISTS 1
#define DT_N_S_sensor_switch_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_sensor_switch_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /sensor-switch/hdc2010-humidity@41
 *
 * Node identifier: DT_N_S_sensor_switch_S_hdc2010_humidity_41
 *
 * Binding (compatible = ti,hdc2010):
 *   $ZEPHYR_BASE/dts/bindings/sensor/ti,hdc2010.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_PATH "/sensor-switch/hdc2010-humidity@41"

/* Node's name with unit-address: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FULL_NAME "hdc2010-humidity@41"
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FULL_NAME_UNQUOTED hdc2010-humidity@41
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FULL_NAME_TOKEN hdc2010_humidity_41
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FULL_NAME_UPPER_TOKEN HDC2010_HUMIDITY_41

/* Node parent (/sensor-switch) identifier: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_PARENT DT_N_S_sensor_switch

/* Node's index in its parent's list of children: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_NODELABEL_NUM 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_NODELABEL(fn) fn(humidity)
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_NODELABEL_VARGS(fn, ...) fn(humidity, __VA_ARGS__)
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_ANCESTOR(fn) fn(DT_N_S_sensor_switch) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_CHILD_NUM 0
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_CHILD(fn) 
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_HASH kL1nzEqv4HKFa8wVOqapKz2wzr20Dt1ssP4Aip9R4Tg

/* Node's dependency ordinal: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_ORD 29
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_REQUIRES_ORDS \
	28, /* /sensor-switch */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_EXISTS 1
#define DT_N_ALIAS_sensor1      DT_N_S_sensor_switch_S_hdc2010_humidity_41
#define DT_N_INST_0_ti_hdc2010  DT_N_S_sensor_switch_S_hdc2010_humidity_41
#define DT_N_NODELABEL_humidity DT_N_S_sensor_switch_S_hdc2010_humidity_41

/* Bus info (controller: '/sensor-switch', type: '['i2c']') */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_BUS_i2c 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_BUS DT_N_S_sensor_switch

/* Macros for properties that are special in the specification: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_REG_NUM 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_REG_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_REG_IDX_0_VAL_ADDRESS 65 /* 0x41 */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_RANGES_NUM 0
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_FOREACH_RANGE(fn) 
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_IRQ_NUM 0
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_IRQ_LEVEL 0
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_COMPAT_MATCHES_ti_hdc2010 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_COMPAT_MODEL_IDX_0 "hdc2010"
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status "okay"
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_STRING_UNQUOTED okay
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_STRING_TOKEN okay
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_IDX_0 "okay"
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, status, 0)
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, status, 0)
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, status, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, status, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_LEN 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_status_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible {"ti,hdc2010"}
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible_IDX_0 "ti,hdc2010"
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible_IDX_0_STRING_UNQUOTED ti,hdc2010
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible_IDX_0_STRING_TOKEN ti_hdc2010
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_HDC2010
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, compatible, 0)
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, compatible, 0)
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, compatible, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, compatible, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible_LEN 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_compatible_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_reg {65 /* 0x41 */}
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_reg_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_reg_IDX_0 65
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_reg_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_zephyr_deferred_init 0
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_wakeup_source 0
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_wakeup_source_EXISTS 1
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_sensor_switch_S_hdc2010_humidity_41_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /sensor-switch/opt3001-light@44
 *
 * Node identifier: DT_N_S_sensor_switch_S_opt3001_light_44
 *
 * Binding (compatible = ti,opt3001):
 *   $ZEPHYR_BASE/dts/bindings/sensor/ti,opt3001.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_PATH "/sensor-switch/opt3001-light@44"

/* Node's name with unit-address: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_FULL_NAME "opt3001-light@44"
#define DT_N_S_sensor_switch_S_opt3001_light_44_FULL_NAME_UNQUOTED opt3001-light@44
#define DT_N_S_sensor_switch_S_opt3001_light_44_FULL_NAME_TOKEN opt3001_light_44
#define DT_N_S_sensor_switch_S_opt3001_light_44_FULL_NAME_UPPER_TOKEN OPT3001_LIGHT_44

/* Node parent (/sensor-switch) identifier: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_PARENT DT_N_S_sensor_switch

/* Node's index in its parent's list of children: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_NODELABEL_NUM 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_NODELABEL(fn) fn(light)
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_NODELABEL_VARGS(fn, ...) fn(light, __VA_ARGS__)
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_ANCESTOR(fn) fn(DT_N_S_sensor_switch) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_sensor_switch_S_opt3001_light_44_CHILD_NUM 0
#define DT_N_S_sensor_switch_S_opt3001_light_44_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_CHILD(fn) 
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_HASH amu_i4KVEHzFF9cdddHiC9HQf7F7kCrfm5ee88JSMXA

/* Node's dependency ordinal: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_ORD 30
#define DT_N_S_sensor_switch_S_opt3001_light_44_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_REQUIRES_ORDS \
	28, /* /sensor-switch */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_EXISTS 1
#define DT_N_ALIAS_sensor0     DT_N_S_sensor_switch_S_opt3001_light_44
#define DT_N_INST_0_ti_opt3001 DT_N_S_sensor_switch_S_opt3001_light_44
#define DT_N_NODELABEL_light   DT_N_S_sensor_switch_S_opt3001_light_44

/* Bus info (controller: '/sensor-switch', type: '['i2c']') */
#define DT_N_S_sensor_switch_S_opt3001_light_44_BUS_i2c 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_BUS DT_N_S_sensor_switch

/* Macros for properties that are special in the specification: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_REG_NUM 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_REG_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_REG_IDX_0_VAL_ADDRESS 68 /* 0x44 */
#define DT_N_S_sensor_switch_S_opt3001_light_44_RANGES_NUM 0
#define DT_N_S_sensor_switch_S_opt3001_light_44_FOREACH_RANGE(fn) 
#define DT_N_S_sensor_switch_S_opt3001_light_44_IRQ_NUM 0
#define DT_N_S_sensor_switch_S_opt3001_light_44_IRQ_LEVEL 0
#define DT_N_S_sensor_switch_S_opt3001_light_44_COMPAT_MATCHES_ti_opt3001 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_sensor_switch_S_opt3001_light_44_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_COMPAT_MODEL_IDX_0 "opt3001"
#define DT_N_S_sensor_switch_S_opt3001_light_44_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status "okay"
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_STRING_UNQUOTED okay
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_STRING_TOKEN okay
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_IDX_0 "okay"
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sensor_switch_S_opt3001_light_44, status, 0)
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sensor_switch_S_opt3001_light_44, status, 0)
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sensor_switch_S_opt3001_light_44, status, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sensor_switch_S_opt3001_light_44, status, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_LEN 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_status_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible {"ti,opt3001"}
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible_IDX_0 "ti,opt3001"
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible_IDX_0_STRING_UNQUOTED ti,opt3001
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible_IDX_0_STRING_TOKEN ti_opt3001
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_OPT3001
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sensor_switch_S_opt3001_light_44, compatible, 0)
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sensor_switch_S_opt3001_light_44, compatible, 0)
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sensor_switch_S_opt3001_light_44, compatible, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sensor_switch_S_opt3001_light_44, compatible, 0, __VA_ARGS__)
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible_LEN 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_compatible_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_reg {68 /* 0x44 */}
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_reg_IDX_0_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_reg_IDX_0 68
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_reg_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_zephyr_deferred_init 0
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_wakeup_source 0
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_wakeup_source_EXISTS 1
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_sensor_switch_S_opt3001_light_44_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/random@40028000
 *
 * Node identifier: DT_N_S_soc_S_random_40028000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-trng):
 *   $ZEPHYR_BASE/dts/bindings/rng/ti,cc13xx-cc26xx-trng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_random_40028000_PATH "/soc/random@40028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_random_40028000_FULL_NAME "random@40028000"
#define DT_N_S_soc_S_random_40028000_FULL_NAME_UNQUOTED random@40028000
#define DT_N_S_soc_S_random_40028000_FULL_NAME_TOKEN random_40028000
#define DT_N_S_soc_S_random_40028000_FULL_NAME_UPPER_TOKEN RANDOM_40028000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_random_40028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_random_40028000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_random_40028000_NODELABEL_NUM 1
#define DT_N_S_soc_S_random_40028000_FOREACH_NODELABEL(fn) fn(trng)
#define DT_N_S_soc_S_random_40028000_FOREACH_NODELABEL_VARGS(fn, ...) fn(trng, __VA_ARGS__)
#define DT_N_S_soc_S_random_40028000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_random_40028000_CHILD_NUM 0
#define DT_N_S_soc_S_random_40028000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_random_40028000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_random_40028000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_random_40028000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_40028000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_random_40028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_random_40028000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_random_40028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_40028000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_random_40028000_HASH 4Cjs1Hr0VfVJrkSx2rm8v2028En5Ylk5kW4K0vT1bbs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_random_40028000_ORD 31
#define DT_N_S_soc_S_random_40028000_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_random_40028000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_random_40028000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_random_40028000_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_trng DT_N_S_soc_S_random_40028000
#define DT_N_NODELABEL_trng               DT_N_S_soc_S_random_40028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_random_40028000_REG_NUM 1
#define DT_N_S_soc_S_random_40028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_40028000_REG_IDX_0_VAL_ADDRESS 1073905664 /* 0x40028000 */
#define DT_N_S_soc_S_random_40028000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_random_40028000_RANGES_NUM 0
#define DT_N_S_soc_S_random_40028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_random_40028000_IRQ_NUM 1
#define DT_N_S_soc_S_random_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_40028000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_random_40028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_random_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_40028000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_random_40028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_random_40028000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_random_40028000_IRQ_LEVEL 1
#define DT_N_S_soc_S_random_40028000_COMPAT_MATCHES_ti_cc13xx_cc26xx_trng 1
#define DT_N_S_soc_S_random_40028000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_40028000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_random_40028000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_40028000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-trng"
#define DT_N_S_soc_S_random_40028000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_random_40028000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_random_40028000_P_reg {1073905664 /* 0x40028000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_random_40028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_reg_IDX_0 1073905664
#define DT_N_S_soc_S_random_40028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_random_40028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_interrupts {33 /* 0x21 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_random_40028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_random_40028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_random_40028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_status "okay"
#define DT_N_S_soc_S_random_40028000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_random_40028000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_random_40028000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_40028000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_random_40028000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_random_40028000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_40028000, status, 0)
#define DT_N_S_soc_S_random_40028000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_40028000, status, 0)
#define DT_N_S_soc_S_random_40028000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_40028000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_40028000_P_status_LEN 1
#define DT_N_S_soc_S_random_40028000_P_status_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_compatible {"ti,cc13xx-cc26xx-trng"}
#define DT_N_S_soc_S_random_40028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-trng"
#define DT_N_S_soc_S_random_40028000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-trng
#define DT_N_S_soc_S_random_40028000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_trng
#define DT_N_S_soc_S_random_40028000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_TRNG
#define DT_N_S_soc_S_random_40028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_40028000, compatible, 0)
#define DT_N_S_soc_S_random_40028000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_40028000, compatible, 0)
#define DT_N_S_soc_S_random_40028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_40028000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_40028000_P_compatible_LEN 1
#define DT_N_S_soc_S_random_40028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_random_40028000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_wakeup_source 0
#define DT_N_S_soc_S_random_40028000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_random_40028000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_random_40028000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40092000
 *
 * Node identifier: DT_N_S_soc_S_rtc_40092000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-rtc-timer):
 *   $ZEPHYR_BASE/dts/bindings/rtc/ti,cc13xx-cc26xx-rtc-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40092000_PATH "/soc/rtc@40092000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40092000_FULL_NAME "rtc@40092000"
#define DT_N_S_soc_S_rtc_40092000_FULL_NAME_UNQUOTED rtc@40092000
#define DT_N_S_soc_S_rtc_40092000_FULL_NAME_TOKEN rtc_40092000
#define DT_N_S_soc_S_rtc_40092000_FULL_NAME_UPPER_TOKEN RTC_40092000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40092000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40092000_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_40092000_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_40092000_FOREACH_NODELABEL(fn) fn(rtc)
#define DT_N_S_soc_S_rtc_40092000_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40092000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40092000_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_40092000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_40092000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40092000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40092000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40092000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40092000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40092000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40092000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40092000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_rtc_40092000_HASH XrwrE61XMOB02mB72DOtlVpTEOdorqn0epT4AewYXd0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40092000_ORD 32
#define DT_N_S_soc_S_rtc_40092000_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40092000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40092000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40092000_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_rtc_timer DT_N_S_soc_S_rtc_40092000
#define DT_N_NODELABEL_rtc                     DT_N_S_soc_S_rtc_40092000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40092000_REG_NUM 1
#define DT_N_S_soc_S_rtc_40092000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_REG_IDX_0_VAL_ADDRESS 1074339840 /* 0x40092000 */
#define DT_N_S_soc_S_rtc_40092000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_40092000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40092000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40092000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40092000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_rtc_40092000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40092000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_rtc_40092000_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_40092000_COMPAT_MATCHES_ti_cc13xx_cc26xx_rtc_timer 1
#define DT_N_S_soc_S_rtc_40092000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_rtc_40092000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-rtc-timer"
#define DT_N_S_soc_S_rtc_40092000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40092000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40092000_P_reg {1074339840 /* 0x40092000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_40092000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_reg_IDX_0 1074339840
#define DT_N_S_soc_S_rtc_40092000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_40092000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_interrupts {4 /* 0x4 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40092000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_rtc_40092000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40092000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_status "okay"
#define DT_N_S_soc_S_rtc_40092000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rtc_40092000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_40092000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40092000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rtc_40092000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40092000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40092000, status, 0)
#define DT_N_S_soc_S_rtc_40092000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40092000, status, 0)
#define DT_N_S_soc_S_rtc_40092000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40092000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40092000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40092000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40092000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40092000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_compatible {"ti,cc13xx-cc26xx-rtc-timer"}
#define DT_N_S_soc_S_rtc_40092000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-rtc-timer"
#define DT_N_S_soc_S_rtc_40092000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-rtc-timer
#define DT_N_S_soc_S_rtc_40092000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_rtc_timer
#define DT_N_S_soc_S_rtc_40092000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_RTC_TIMER
#define DT_N_S_soc_S_rtc_40092000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40092000, compatible, 0)
#define DT_N_S_soc_S_rtc_40092000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40092000, compatible, 0)
#define DT_N_S_soc_S_rtc_40092000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40092000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40092000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40092000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40092000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40092000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_40092000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40092000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40092000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40092000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40008000
 *
 * Node identifier: DT_N_S_soc_S_spi_40008000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/ti,cc13xx-cc26xx-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40008000_PATH "/soc/spi@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40008000_FULL_NAME "spi@40008000"
#define DT_N_S_soc_S_spi_40008000_FULL_NAME_UNQUOTED spi@40008000
#define DT_N_S_soc_S_spi_40008000_FULL_NAME_TOKEN spi_40008000
#define DT_N_S_soc_S_spi_40008000_FULL_NAME_UPPER_TOKEN SPI_40008000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40008000_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40008000_FOREACH_NODELABEL(fn) fn(spi1)
#define DT_N_S_soc_S_spi_40008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40008000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40008000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_40008000_HASH Ht6_yIzSf2wZBf_A28BKzAGbWGXOs6GB7utvRB52V1k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40008000_ORD 33
#define DT_N_S_soc_S_spi_40008000_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40008000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40008000_EXISTS 1
#define DT_N_INST_1_ti_cc13xx_cc26xx_spi DT_N_S_soc_S_spi_40008000
#define DT_N_NODELABEL_spi1              DT_N_S_soc_S_spi_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40008000_REG_NUM 1
#define DT_N_S_soc_S_spi_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_spi_40008000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_spi_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40008000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40008000_COMPAT_MATCHES_ti_cc13xx_cc26xx_spi 1
#define DT_N_S_soc_S_spi_40008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_spi_40008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-spi"
#define DT_N_S_soc_S_spi_40008000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40008000_P_reg {1073774592 /* 0x40008000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_spi_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_status "disabled"
#define DT_N_S_soc_S_spi_40008000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40008000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40008000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40008000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40008000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40008000, status, 0)
#define DT_N_S_soc_S_spi_40008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40008000, status, 0)
#define DT_N_S_soc_S_spi_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40008000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_compatible {"ti,cc13xx-cc26xx-spi"}
#define DT_N_S_soc_S_spi_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-spi"
#define DT_N_S_soc_S_spi_40008000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-spi
#define DT_N_S_soc_S_spi_40008000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_spi
#define DT_N_S_soc_S_spi_40008000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_SPI
#define DT_N_S_soc_S_spi_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40008000, compatible, 0)
#define DT_N_S_soc_S_spi_40008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40008000, compatible, 0)
#define DT_N_S_soc_S_spi_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40008000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_interrupts {8 /* 0x8 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_spi_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UNQUOTED timer@e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_TOKEN timer_e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UPPER_TOKEN TIMER_E000E010

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_e000e010_HASH aZrzPLAIRgEwRZJIvTCzJONA6gPgc4QlhkiU5oWGArA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 34
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /system-clock
 *
 * Node identifier: DT_N_S_system_clock
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_system_clock_PATH "/system-clock"

/* Node's name with unit-address: */
#define DT_N_S_system_clock_FULL_NAME "system-clock"
#define DT_N_S_system_clock_FULL_NAME_UNQUOTED system-clock
#define DT_N_S_system_clock_FULL_NAME_TOKEN system_clock
#define DT_N_S_system_clock_FULL_NAME_UPPER_TOKEN SYSTEM_CLOCK

/* Node parent (/) identifier: */
#define DT_N_S_system_clock_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_system_clock_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_system_clock_NODELABEL_NUM 1
#define DT_N_S_system_clock_FOREACH_NODELABEL(fn) fn(sysclk)
#define DT_N_S_system_clock_FOREACH_NODELABEL_VARGS(fn, ...) fn(sysclk, __VA_ARGS__)
#define DT_N_S_system_clock_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_system_clock_CHILD_NUM 0
#define DT_N_S_system_clock_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_system_clock_FOREACH_CHILD(fn) 
#define DT_N_S_system_clock_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_system_clock_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_system_clock_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_system_clock_HASH lAhq874bK5OGd53v0YdRWUH8C4M_yVxoewZAdRFX5Uo

/* Node's dependency ordinal: */
#define DT_N_S_system_clock_ORD 35
#define DT_N_S_system_clock_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_system_clock_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_system_clock_SUPPORTS_ORDS \
	38, /* /soc/uart@40001000 */ \
	41, /* /soc/uart@4000b000 */

/* Existence and alternate IDs: */
#define DT_N_S_system_clock_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_system_clock
#define DT_N_NODELABEL_sysclk   DT_N_S_system_clock

/* Macros for properties that are special in the specification: */
#define DT_N_S_system_clock_REG_NUM 0
#define DT_N_S_system_clock_RANGES_NUM 0
#define DT_N_S_system_clock_FOREACH_RANGE(fn) 
#define DT_N_S_system_clock_IRQ_NUM 0
#define DT_N_S_system_clock_IRQ_LEVEL 0
#define DT_N_S_system_clock_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_system_clock_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_system_clock_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_system_clock_P_clock_frequency 48000000
#define DT_N_S_system_clock_P_clock_frequency_EXISTS 1
#define DT_N_S_system_clock_P_compatible {"fixed-clock"}
#define DT_N_S_system_clock_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_system_clock_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_system_clock_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_system_clock_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_system_clock_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_system_clock_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_system_clock, compatible, 0)
#define DT_N_S_system_clock_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_system_clock, compatible, 0)
#define DT_N_S_system_clock_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_system_clock, compatible, 0, __VA_ARGS__)
#define DT_N_S_system_clock_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_system_clock, compatible, 0, __VA_ARGS__)
#define DT_N_S_system_clock_P_compatible_LEN 1
#define DT_N_S_system_clock_P_compatible_EXISTS 1
#define DT_N_S_system_clock_P_zephyr_deferred_init 0
#define DT_N_S_system_clock_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_system_clock_P_wakeup_source 0
#define DT_N_S_system_clock_P_wakeup_source_EXISTS 1
#define DT_N_S_system_clock_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_system_clock_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/uart0_rx_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_PATH "/soc/pinctrl@40081000/uart0_rx_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FULL_NAME "uart0_rx_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FULL_NAME_UNQUOTED uart0_rx_default
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FULL_NAME_TOKEN uart0_rx_default
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FULL_NAME_UPPER_TOKEN UART0_RX_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_NODELABEL(fn) fn(uart0_rx_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0_rx_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_HASH 5FBaAImPE_nAfWkDpALJC2uN39lK8YREDT0AbbzuigA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_ORD 36
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_SUPPORTS_ORDS \
	38, /* /soc/uart@40001000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_EXISTS 1
#define DT_N_NODELABEL_uart0_rx_default DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_pinmux {12 /* 0xc */, 15 /* 0xf */}
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_pinmux_IDX_0 12
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_pinmux_IDX_1 15
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_input_enable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/uart0_tx_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_PATH "/soc/pinctrl@40081000/uart0_tx_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FULL_NAME "uart0_tx_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FULL_NAME_UNQUOTED uart0_tx_default
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FULL_NAME_TOKEN uart0_tx_default
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FULL_NAME_UPPER_TOKEN UART0_TX_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_NODELABEL(fn) fn(uart0_tx_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0_tx_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_HASH cU1fwdT51PDHAEtgwTdcmd_clQhpav8UGZGp7Np_tx4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_ORD 37
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_SUPPORTS_ORDS \
	38, /* /soc/uart@40001000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_EXISTS 1
#define DT_N_NODELABEL_uart0_tx_default DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_pinmux {13 /* 0xd */, 16 /* 0x10 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_pinmux_IDX_0 13
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_pinmux_IDX_1 16
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/uart@40001000
 *
 * Node identifier: DT_N_S_soc_S_uart_40001000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/ti,cc13xx-cc26xx-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40001000_PATH "/soc/uart@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40001000_FULL_NAME "uart@40001000"
#define DT_N_S_soc_S_uart_40001000_FULL_NAME_UNQUOTED uart@40001000
#define DT_N_S_soc_S_uart_40001000_FULL_NAME_TOKEN uart_40001000
#define DT_N_S_soc_S_uart_40001000_FULL_NAME_UPPER_TOKEN UART_40001000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40001000_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_40001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_40001000_FOREACH_NODELABEL(fn) fn(uart0)
#define DT_N_S_soc_S_uart_40001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40001000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_40001000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_40001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_40001000_HASH Ljxlsd9O_6b3xA9828JGXdex7GvQC4WZAEL9Cy7A5lQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40001000_ORD 38
#define DT_N_S_soc_S_uart_40001000_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40001000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */ \
	35, /* /system-clock */ \
	36, /* /soc/pinctrl@40081000/uart0_rx_default */ \
	37, /* /soc/pinctrl@40081000/uart0_tx_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40001000_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_uart DT_N_S_soc_S_uart_40001000
#define DT_N_NODELABEL_uart0              DT_N_S_soc_S_uart_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40001000_REG_NUM 1
#define DT_N_S_soc_S_uart_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_uart_40001000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_uart_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_uart_40001000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_40001000_COMPAT_MATCHES_ti_cc13xx_cc26xx_uart 1
#define DT_N_S_soc_S_uart_40001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_uart_40001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-uart"
#define DT_N_S_soc_S_uart_40001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40001000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_40001000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40001000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40001000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40001000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default
#define DT_N_S_soc_S_uart_40001000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40001000_P_reg {1073745920 /* 0x40001000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_uart_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_interrupts {5 /* 0x5 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_uart_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_current_speed 115200
#define DT_N_S_soc_S_uart_40001000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_stop_bits "1"
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40001000, stop_bits, 0)
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40001000, stop_bits, 0)
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40001000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40001000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_uart_40001000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_data_bits 8
#define DT_N_S_soc_S_uart_40001000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_uart_40001000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40001000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_parity "none"
#define DT_N_S_soc_S_uart_40001000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_40001000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_40001000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_40001000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_40001000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_40001000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40001000, parity, 0)
#define DT_N_S_soc_S_uart_40001000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40001000, parity, 0)
#define DT_N_S_soc_S_uart_40001000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40001000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40001000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_40001000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_status "okay"
#define DT_N_S_soc_S_uart_40001000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_40001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_40001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40001000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_40001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_40001000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40001000, status, 0)
#define DT_N_S_soc_S_uart_40001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40001000, status, 0)
#define DT_N_S_soc_S_uart_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_compatible {"ti,cc13xx-cc26xx-uart"}
#define DT_N_S_soc_S_uart_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-uart"
#define DT_N_S_soc_S_uart_40001000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-uart
#define DT_N_S_soc_S_uart_40001000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_uart
#define DT_N_S_soc_S_uart_40001000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_UART
#define DT_N_S_soc_S_uart_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40001000, compatible, 0)
#define DT_N_S_soc_S_uart_40001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40001000, compatible, 0)
#define DT_N_S_soc_S_uart_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_clocks_IDX_0_PH DT_N_S_system_clock
#define DT_N_S_soc_S_uart_40001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40001000, clocks, 0)
#define DT_N_S_soc_S_uart_40001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40001000, clocks, 0)
#define DT_N_S_soc_S_uart_40001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_40001000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40001000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40001000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_uart_40001000, pinctrl_0, 1)
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40001000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40001000, pinctrl_0, 1)
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40001000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40001000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40001000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40001000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40001000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40001000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40001000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40001000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_40001000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/uart1_rx_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_PATH "/soc/pinctrl@40081000/uart1_rx_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FULL_NAME "uart1_rx_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FULL_NAME_UNQUOTED uart1_rx_default
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FULL_NAME_TOKEN uart1_rx_default
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FULL_NAME_UPPER_TOKEN UART1_RX_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_NODELABEL(fn) fn(uart1_rx_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1_rx_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_HASH KVda46GigpetHDKFHJAJnyCtmKbs1ZAP_OYjvoDvHbA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_ORD 39
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_SUPPORTS_ORDS \
	41, /* /soc/uart@4000b000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_EXISTS 1
#define DT_N_NODELABEL_uart1_rx_default DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_pinmux {21 /* 0x15 */, 19 /* 0x13 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_pinmux_IDX_0 21
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_pinmux_IDX_1 19
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_input_enable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/uart1_tx_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_PATH "/soc/pinctrl@40081000/uart1_tx_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FULL_NAME "uart1_tx_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FULL_NAME_UNQUOTED uart1_tx_default
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FULL_NAME_TOKEN uart1_tx_default
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FULL_NAME_UPPER_TOKEN UART1_TX_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_NODELABEL(fn) fn(uart1_tx_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1_tx_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_HASH RBwmOEkrNAKaaqzDUv_jHLaTkGP3iUeXNx1rzi1kO_I

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_ORD 40
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_SUPPORTS_ORDS \
	41, /* /soc/uart@4000b000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_EXISTS 1
#define DT_N_NODELABEL_uart1_tx_default DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_pinmux {22 /* 0x16 */, 20 /* 0x14 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_pinmux_IDX_0 22
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_pinmux_IDX_1 20
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/uart@4000b000
 *
 * Node identifier: DT_N_S_soc_S_uart_4000b000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/ti,cc13xx-cc26xx-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_4000b000_PATH "/soc/uart@4000b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_4000b000_FULL_NAME "uart@4000b000"
#define DT_N_S_soc_S_uart_4000b000_FULL_NAME_UNQUOTED uart@4000b000
#define DT_N_S_soc_S_uart_4000b000_FULL_NAME_TOKEN uart_4000b000
#define DT_N_S_soc_S_uart_4000b000_FULL_NAME_UPPER_TOKEN UART_4000B000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_4000b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_4000b000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_4000b000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_4000b000_FOREACH_NODELABEL(fn) fn(uart1)
#define DT_N_S_soc_S_uart_4000b000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_4000b000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_4000b000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_4000b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_4000b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_4000b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_4000b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_4000b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_4000b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_4000b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_4000b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_4000b000_HASH jcZuhFl_iJk6hOWcBKGuVV52REdabbqjmU9wnqtmQTY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_4000b000_ORD 41
#define DT_N_S_soc_S_uart_4000b000_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_4000b000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */ \
	35, /* /system-clock */ \
	39, /* /soc/pinctrl@40081000/uart1_rx_default */ \
	40, /* /soc/pinctrl@40081000/uart1_tx_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_4000b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_4000b000_EXISTS 1
#define DT_N_INST_1_ti_cc13xx_cc26xx_uart DT_N_S_soc_S_uart_4000b000
#define DT_N_NODELABEL_uart1              DT_N_S_soc_S_uart_4000b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_4000b000_REG_NUM 1
#define DT_N_S_soc_S_uart_4000b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_REG_IDX_0_VAL_ADDRESS 1073786880 /* 0x4000b000 */
#define DT_N_S_soc_S_uart_4000b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_4000b000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_4000b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_4000b000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_uart_4000b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_4000b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_uart_4000b000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_4000b000_COMPAT_MATCHES_ti_cc13xx_cc26xx_uart 1
#define DT_N_S_soc_S_uart_4000b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_uart_4000b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-uart"
#define DT_N_S_soc_S_uart_4000b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_4000b000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_4000b000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_4000b000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_4000b000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_4000b000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default
#define DT_N_S_soc_S_uart_4000b000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default

/* Generic property macros: */
#define DT_N_S_soc_S_uart_4000b000_P_reg {1073786880 /* 0x4000b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_4000b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_reg_IDX_0 1073786880
#define DT_N_S_soc_S_uart_4000b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_4000b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_interrupts {36 /* 0x24 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_4000b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_uart_4000b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_4000b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_current_speed 115200
#define DT_N_S_soc_S_uart_4000b000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits "1"
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4000b000, stop_bits, 0)
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4000b000, stop_bits, 0)
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4000b000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4000b000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_uart_4000b000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_data_bits 8
#define DT_N_S_soc_S_uart_4000b000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_uart_4000b000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_4000b000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_parity "none"
#define DT_N_S_soc_S_uart_4000b000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_4000b000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_4000b000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_4000b000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_4000b000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_4000b000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4000b000, parity, 0)
#define DT_N_S_soc_S_uart_4000b000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4000b000, parity, 0)
#define DT_N_S_soc_S_uart_4000b000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4000b000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4000b000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_4000b000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_status "okay"
#define DT_N_S_soc_S_uart_4000b000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_4000b000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_4000b000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_4000b000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_4000b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_4000b000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4000b000, status, 0)
#define DT_N_S_soc_S_uart_4000b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4000b000, status, 0)
#define DT_N_S_soc_S_uart_4000b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4000b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4000b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_status_LEN 1
#define DT_N_S_soc_S_uart_4000b000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_compatible {"ti,cc13xx-cc26xx-uart"}
#define DT_N_S_soc_S_uart_4000b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-uart"
#define DT_N_S_soc_S_uart_4000b000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-uart
#define DT_N_S_soc_S_uart_4000b000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_uart
#define DT_N_S_soc_S_uart_4000b000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_UART
#define DT_N_S_soc_S_uart_4000b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4000b000, compatible, 0)
#define DT_N_S_soc_S_uart_4000b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4000b000, compatible, 0)
#define DT_N_S_soc_S_uart_4000b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4000b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4000b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_4000b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_clocks_IDX_0_PH DT_N_S_system_clock
#define DT_N_S_soc_S_uart_4000b000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4000b000, clocks, 0)
#define DT_N_S_soc_S_uart_4000b000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4000b000, clocks, 0)
#define DT_N_S_soc_S_uart_4000b000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4000b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4000b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_4000b000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_4000b000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_4000b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_4000b000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4000b000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_uart_4000b000, pinctrl_0, 1)
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4000b000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4000b000, pinctrl_0, 1)
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4000b000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4000b000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4000b000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4000b000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4000b000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4000b000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4000b000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4000b000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_4000b000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40080000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40080000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/ti,cc13xx-cc26xx-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40080000_PATH "/soc/watchdog@40080000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40080000_FULL_NAME "watchdog@40080000"
#define DT_N_S_soc_S_watchdog_40080000_FULL_NAME_UNQUOTED watchdog@40080000
#define DT_N_S_soc_S_watchdog_40080000_FULL_NAME_TOKEN watchdog_40080000
#define DT_N_S_soc_S_watchdog_40080000_FULL_NAME_UPPER_TOKEN WATCHDOG_40080000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40080000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40080000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_40080000_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_NODELABEL(fn) fn(wdt0)
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdt0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40080000_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40080000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_watchdog_40080000_HASH wMc2ui7IJMbwg_DpZm_O6IySaU8GufbsYEhsmTyZioM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40080000_ORD 42
#define DT_N_S_soc_S_watchdog_40080000_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40080000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40080000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40080000_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_watchdog DT_N_S_soc_S_watchdog_40080000
#define DT_N_NODELABEL_wdt0                   DT_N_S_soc_S_watchdog_40080000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40080000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40080000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_REG_IDX_0_VAL_ADDRESS 1074266112 /* 0x40080000 */
#define DT_N_S_soc_S_watchdog_40080000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_watchdog_40080000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40080000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40080000_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40080000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_watchdog_40080000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_40080000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_watchdog_40080000_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_40080000_COMPAT_MATCHES_ti_cc13xx_cc26xx_watchdog 1
#define DT_N_S_soc_S_watchdog_40080000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_watchdog_40080000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-watchdog"
#define DT_N_S_soc_S_watchdog_40080000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40080000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40080000_P_reg {1074266112 /* 0x40080000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_watchdog_40080000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_reg_IDX_0 1074266112
#define DT_N_S_soc_S_watchdog_40080000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_watchdog_40080000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_interrupts {14 /* 0xe */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_40080000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_watchdog_40080000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_40080000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_interrupt_nmi 0
#define DT_N_S_soc_S_watchdog_40080000_P_interrupt_nmi_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40080000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_40080000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40080000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40080000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_40080000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40080000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40080000, status, 0)
#define DT_N_S_soc_S_watchdog_40080000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40080000, status, 0)
#define DT_N_S_soc_S_watchdog_40080000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40080000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40080000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40080000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40080000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40080000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_compatible {"ti,cc13xx-cc26xx-watchdog"}
#define DT_N_S_soc_S_watchdog_40080000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-watchdog"
#define DT_N_S_soc_S_watchdog_40080000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-watchdog
#define DT_N_S_soc_S_watchdog_40080000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_watchdog
#define DT_N_S_soc_S_watchdog_40080000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_WATCHDOG
#define DT_N_S_soc_S_watchdog_40080000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40080000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40080000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40080000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40080000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40080000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40080000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40080000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40080000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40080000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40080000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40080000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40080000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40080000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@400cb008
 *
 * Node identifier: DT_N_S_soc_S_adc_400cb008
 *
 * Binding (compatible = ti,cc13xx-cc26xx-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/ti,cc13xx-cc26xx-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_400cb008_PATH "/soc/adc@400cb008"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_400cb008_FULL_NAME "adc@400cb008"
#define DT_N_S_soc_S_adc_400cb008_FULL_NAME_UNQUOTED adc@400cb008
#define DT_N_S_soc_S_adc_400cb008_FULL_NAME_TOKEN adc_400cb008
#define DT_N_S_soc_S_adc_400cb008_FULL_NAME_UPPER_TOKEN ADC_400CB008

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_400cb008_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_400cb008_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_400cb008_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_400cb008_FOREACH_NODELABEL(fn) fn(adc0)
#define DT_N_S_soc_S_adc_400cb008_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_400cb008_CHILD_NUM 6
#define DT_N_S_soc_S_adc_400cb008_CHILD_NUM_STATUS_OKAY 6
#define DT_N_S_soc_S_adc_400cb008_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e)
#define DT_N_S_soc_S_adc_400cb008_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_a) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_b) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_d) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_e)
#define DT_N_S_soc_S_adc_400cb008_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e)
#define DT_N_S_soc_S_adc_400cb008_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_a) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_b) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_d) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_e)
#define DT_N_S_soc_S_adc_400cb008_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_adc_400cb008_HASH w2IUxzujWw_J3bgGyEGcy3jg7rmZkPVqsm8VQYZAXX8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_400cb008_ORD 43
#define DT_N_S_soc_S_adc_400cb008_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_400cb008_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_400cb008_SUPPORTS_ORDS \
	44, /* /soc/adc@400cb008/channel@9 */ \
	45, /* /soc/adc@400cb008/channel@a */ \
	46, /* /soc/adc@400cb008/channel@b */ \
	47, /* /soc/adc@400cb008/channel@c */ \
	48, /* /soc/adc@400cb008/channel@d */ \
	49, /* /soc/adc@400cb008/channel@e */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_400cb008_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_adc DT_N_S_soc_S_adc_400cb008
#define DT_N_NODELABEL_adc0              DT_N_S_soc_S_adc_400cb008

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_400cb008_REG_NUM 1
#define DT_N_S_soc_S_adc_400cb008_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_REG_IDX_0_VAL_ADDRESS 1074573320 /* 0x400cb008 */
#define DT_N_S_soc_S_adc_400cb008_REG_IDX_0_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_adc_400cb008_RANGES_NUM 0
#define DT_N_S_soc_S_adc_400cb008_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_400cb008_IRQ_NUM 1
#define DT_N_S_soc_S_adc_400cb008_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_IRQ_IDX_0_VAL_irq 32
#define DT_N_S_soc_S_adc_400cb008_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_400cb008_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_400cb008_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_400cb008_COMPAT_MATCHES_ti_cc13xx_cc26xx_adc 1
#define DT_N_S_soc_S_adc_400cb008_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_adc_400cb008_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-adc"
#define DT_N_S_soc_S_adc_400cb008_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_400cb008_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_400cb008_P_reg {1074573320 /* 0x400cb008 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_adc_400cb008_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_reg_IDX_0 1074573320
#define DT_N_S_soc_S_adc_400cb008_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_reg_IDX_1 1
#define DT_N_S_soc_S_adc_400cb008_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_interrupts {32 /* 0x20 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_400cb008_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_interrupts_IDX_0 32
#define DT_N_S_soc_S_adc_400cb008_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_400cb008_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_status "okay"
#define DT_N_S_soc_S_adc_400cb008_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_400cb008_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_400cb008_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_400cb008_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_400cb008_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_400cb008_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008, status, 0)
#define DT_N_S_soc_S_adc_400cb008_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008, status, 0)
#define DT_N_S_soc_S_adc_400cb008_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_P_status_LEN 1
#define DT_N_S_soc_S_adc_400cb008_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_compatible {"ti,cc13xx-cc26xx-adc"}
#define DT_N_S_soc_S_adc_400cb008_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_compatible_IDX_0 "ti,cc13xx-cc26xx-adc"
#define DT_N_S_soc_S_adc_400cb008_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-adc
#define DT_N_S_soc_S_adc_400cb008_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_adc
#define DT_N_S_soc_S_adc_400cb008_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_ADC
#define DT_N_S_soc_S_adc_400cb008_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008, compatible, 0)
#define DT_N_S_soc_S_adc_400cb008_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008, compatible, 0)
#define DT_N_S_soc_S_adc_400cb008_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_400cb008_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_400cb008_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_wakeup_source 0
#define DT_N_S_soc_S_adc_400cb008_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_400cb008_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@400cb008/channel@9
 *
 * Node identifier: DT_N_S_soc_S_adc_400cb008_S_channel_9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_PATH "/soc/adc@400cb008/channel@9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FULL_NAME "channel@9"
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FULL_NAME_UNQUOTED channel@9
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FULL_NAME_TOKEN channel_9
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FULL_NAME_UPPER_TOKEN CHANNEL_9

/* Node parent (/soc/adc@400cb008) identifier: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_PARENT DT_N_S_soc_S_adc_400cb008

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_NODELABEL_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_adc_400cb008) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_CHILD_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_HASH kte_G4fiMmJr43C_dpsZJM1TyA3yfyxPPebx88xEWxo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_ORD 44
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_REQUIRES_ORDS \
	43, /* /soc/adc@400cb008 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_REG_NUM 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_REG_IDX_0_VAL_ADDRESS 9 /* 0x9 */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_RANGES_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_IRQ_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_reg {9 /* 0x9 */}
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_reg_IDX_0 9
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_STRING_UNQUOTED ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_STRING_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_STRING_UPPER_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_IDX_0 "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_IDX_0_ENUM_IDX 9
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_IDX_0_ENUM_VAL_ADC_GAIN_1_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_gain_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_STRING_UNQUOTED ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_STRING_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_STRING_UPPER_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_IDX_0 "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_IDX_0_ENUM_IDX 4
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_IDX_0_ENUM_VAL_ADC_REF_INTERNAL_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_reference_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_acquisition_time 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_acquisition_time_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_differential 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_differential_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_resolution 12
#define DT_N_S_soc_S_adc_400cb008_S_channel_9_P_zephyr_resolution_EXISTS 1

/*
 * Devicetree node: /soc/adc@400cb008/channel@a
 *
 * Node identifier: DT_N_S_soc_S_adc_400cb008_S_channel_a
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_PATH "/soc/adc@400cb008/channel@a"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FULL_NAME "channel@a"
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FULL_NAME_UNQUOTED channel@a
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FULL_NAME_TOKEN channel_a
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FULL_NAME_UPPER_TOKEN CHANNEL_A

/* Node parent (/soc/adc@400cb008) identifier: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_PARENT DT_N_S_soc_S_adc_400cb008

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_NODELABEL_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_adc_400cb008) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_CHILD_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_HASH eqmRZeeKHYK_P77fn_ewFBK_ZcaugNnUIrXalg2th8U

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_ORD 45
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_REQUIRES_ORDS \
	43, /* /soc/adc@400cb008 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_REG_NUM 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_REG_IDX_0_VAL_ADDRESS 10 /* 0xa */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_RANGES_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_IRQ_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_reg {10 /* 0xa */}
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_reg_IDX_0 10
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_STRING_UNQUOTED ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_STRING_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_STRING_UPPER_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_IDX_0 "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_IDX_0_ENUM_IDX 9
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_IDX_0_ENUM_VAL_ADC_GAIN_1_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_gain_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_STRING_UNQUOTED ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_STRING_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_STRING_UPPER_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_IDX_0 "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_IDX_0_ENUM_IDX 4
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_IDX_0_ENUM_VAL_ADC_REF_INTERNAL_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_reference_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_acquisition_time 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_acquisition_time_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_differential 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_differential_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_resolution 12
#define DT_N_S_soc_S_adc_400cb008_S_channel_a_P_zephyr_resolution_EXISTS 1

/*
 * Devicetree node: /soc/adc@400cb008/channel@b
 *
 * Node identifier: DT_N_S_soc_S_adc_400cb008_S_channel_b
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_PATH "/soc/adc@400cb008/channel@b"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FULL_NAME "channel@b"
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FULL_NAME_UNQUOTED channel@b
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FULL_NAME_TOKEN channel_b
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FULL_NAME_UPPER_TOKEN CHANNEL_B

/* Node parent (/soc/adc@400cb008) identifier: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_PARENT DT_N_S_soc_S_adc_400cb008

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_NODELABEL_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_adc_400cb008) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_CHILD_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_HASH eFAZVQejTlEm_XSV6eU5kF_p1vNKbuhxql5cHsaN2gI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_ORD 46
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_REQUIRES_ORDS \
	43, /* /soc/adc@400cb008 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_REG_NUM 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_REG_IDX_0_VAL_ADDRESS 11 /* 0xb */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_RANGES_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_IRQ_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_reg {11 /* 0xb */}
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_reg_IDX_0 11
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_STRING_UNQUOTED ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_STRING_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_STRING_UPPER_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_IDX_0 "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_IDX_0_ENUM_IDX 9
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_IDX_0_ENUM_VAL_ADC_GAIN_1_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_gain_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_STRING_UNQUOTED ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_STRING_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_STRING_UPPER_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_IDX_0 "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_IDX_0_ENUM_IDX 4
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_IDX_0_ENUM_VAL_ADC_REF_INTERNAL_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_reference_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_acquisition_time 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_acquisition_time_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_differential 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_differential_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_resolution 12
#define DT_N_S_soc_S_adc_400cb008_S_channel_b_P_zephyr_resolution_EXISTS 1

/*
 * Devicetree node: /soc/adc@400cb008/channel@c
 *
 * Node identifier: DT_N_S_soc_S_adc_400cb008_S_channel_c
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_PATH "/soc/adc@400cb008/channel@c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FULL_NAME "channel@c"
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FULL_NAME_UNQUOTED channel@c
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FULL_NAME_TOKEN channel_c
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FULL_NAME_UPPER_TOKEN CHANNEL_C

/* Node parent (/soc/adc@400cb008) identifier: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_PARENT DT_N_S_soc_S_adc_400cb008

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_NODELABEL_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_adc_400cb008) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_CHILD_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_HASH lFf8AdAPJNzI_0ox0cGTRk997Xa__NuPCUCvuf8pmGg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_ORD 47
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_REQUIRES_ORDS \
	43, /* /soc/adc@400cb008 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_REG_NUM 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_REG_IDX_0_VAL_ADDRESS 12 /* 0xc */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_RANGES_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_IRQ_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_reg {12 /* 0xc */}
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_reg_IDX_0 12
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_STRING_UNQUOTED ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_STRING_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_STRING_UPPER_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_IDX_0 "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_IDX_0_ENUM_IDX 9
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_IDX_0_ENUM_VAL_ADC_GAIN_1_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_gain_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_STRING_UNQUOTED ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_STRING_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_STRING_UPPER_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_IDX_0 "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_IDX_0_ENUM_IDX 4
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_IDX_0_ENUM_VAL_ADC_REF_INTERNAL_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_reference_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_acquisition_time 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_acquisition_time_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_differential 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_differential_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_resolution 12
#define DT_N_S_soc_S_adc_400cb008_S_channel_c_P_zephyr_resolution_EXISTS 1

/*
 * Devicetree node: /soc/adc@400cb008/channel@d
 *
 * Node identifier: DT_N_S_soc_S_adc_400cb008_S_channel_d
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_PATH "/soc/adc@400cb008/channel@d"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FULL_NAME "channel@d"
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FULL_NAME_UNQUOTED channel@d
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FULL_NAME_TOKEN channel_d
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FULL_NAME_UPPER_TOKEN CHANNEL_D

/* Node parent (/soc/adc@400cb008) identifier: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_PARENT DT_N_S_soc_S_adc_400cb008

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_NODELABEL_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_adc_400cb008) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_CHILD_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_HASH B_EJ99WaF2GKzm_Fb4h5g798FArQ3xBI0FSswK0RosQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_ORD 48
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_REQUIRES_ORDS \
	43, /* /soc/adc@400cb008 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_REG_NUM 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_REG_IDX_0_VAL_ADDRESS 13 /* 0xd */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_RANGES_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_IRQ_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_reg {13 /* 0xd */}
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_reg_IDX_0 13
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_STRING_UNQUOTED ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_STRING_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_STRING_UPPER_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_IDX_0 "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_IDX_0_ENUM_IDX 9
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_IDX_0_ENUM_VAL_ADC_GAIN_1_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_gain_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_STRING_UNQUOTED ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_STRING_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_STRING_UPPER_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_IDX_0 "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_IDX_0_ENUM_IDX 4
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_IDX_0_ENUM_VAL_ADC_REF_INTERNAL_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_reference_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_acquisition_time 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_acquisition_time_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_differential 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_differential_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_resolution 12
#define DT_N_S_soc_S_adc_400cb008_S_channel_d_P_zephyr_resolution_EXISTS 1

/*
 * Devicetree node: /soc/adc@400cb008/channel@e
 *
 * Node identifier: DT_N_S_soc_S_adc_400cb008_S_channel_e
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_PATH "/soc/adc@400cb008/channel@e"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FULL_NAME "channel@e"
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FULL_NAME_UNQUOTED channel@e
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FULL_NAME_TOKEN channel_e
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FULL_NAME_UPPER_TOKEN CHANNEL_E

/* Node parent (/soc/adc@400cb008) identifier: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_PARENT DT_N_S_soc_S_adc_400cb008

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_NODELABEL_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_adc_400cb008) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_CHILD_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_HASH ICoz2Euu5zGsKuwaAcPgm1l2TvC_hptpqU_jtydTebs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_ORD 49
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_REQUIRES_ORDS \
	43, /* /soc/adc@400cb008 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_REG_NUM 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_REG_IDX_0_VAL_ADDRESS 14 /* 0xe */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_RANGES_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_IRQ_NUM 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_reg {14 /* 0xe */}
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_reg_IDX_0 14
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_STRING_UNQUOTED ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_STRING_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_STRING_UPPER_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_IDX_0 "ADC_GAIN_1"
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_IDX_0_ENUM_IDX 9
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_IDX_0_ENUM_VAL_ADC_GAIN_1_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_gain_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_STRING_UNQUOTED ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_STRING_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_STRING_UPPER_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_IDX_0 "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_IDX_0_ENUM_IDX 4
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_IDX_0_ENUM_VAL_ADC_REF_INTERNAL_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_LEN 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_reference_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_acquisition_time 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_acquisition_time_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_differential 0
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_differential_EXISTS 1
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_resolution 12
#define DT_N_S_soc_S_adc_400cb008_S_channel_e_P_zephyr_resolution_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40030000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40030000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/ti,cc13xx-cc26xx-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40030000_PATH "/soc/flash-controller@40030000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40030000_FULL_NAME "flash-controller@40030000"
#define DT_N_S_soc_S_flash_controller_40030000_FULL_NAME_UNQUOTED flash-controller@40030000
#define DT_N_S_soc_S_flash_controller_40030000_FULL_NAME_TOKEN flash_controller_40030000
#define DT_N_S_soc_S_flash_controller_40030000_FULL_NAME_UPPER_TOKEN FLASH_CONTROLLER_40030000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40030000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40030000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40030000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_NODELABEL(fn) fn(flash_controller)
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash_controller, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40030000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40030000_HASH BQrJ3TBY8xcP_AAoykpO87Jt_7kVYMUe_imtIdWd5Do

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40030000_ORD 50
#define DT_N_S_soc_S_flash_controller_40030000_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40030000_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40030000_SUPPORTS_ORDS \
	51, /* /soc/flash-controller@40030000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40030000_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_flash_controller DT_N_S_soc_S_flash_controller_40030000
#define DT_N_NODELABEL_flash_controller               DT_N_S_soc_S_flash_controller_40030000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40030000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_REG_IDX_0_VAL_ADDRESS 1073938432 /* 0x40030000 */
#define DT_N_S_soc_S_flash_controller_40030000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_flash_controller_40030000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40030000_COMPAT_MATCHES_ti_cc13xx_cc26xx_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40030000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_flash_controller_40030000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-flash-controller"
#define DT_N_S_soc_S_flash_controller_40030000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40030000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40030000_P_reg {1073938432 /* 0x40030000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_flash_controller_40030000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_P_reg_IDX_0 1073938432
#define DT_N_S_soc_S_flash_controller_40030000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_flash_controller_40030000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible {"ti,cc13xx-cc26xx-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-flash-controller"
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-flash-controller
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_flash_controller
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40030000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40030000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40030000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40030000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40030000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40030000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40030000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_PATH "/soc/flash-controller@40030000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FULL_NAME "flash@0"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FULL_NAME_UNQUOTED flash@0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FULL_NAME_TOKEN flash_0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FULL_NAME_UPPER_TOKEN FLASH_0

/* Node parent (/soc/flash-controller@40030000) identifier: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_PARENT DT_N_S_soc_S_flash_controller_40030000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_40030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_HASH Z2_PlGOYx8bbPBivjf4Y5iQeLWQt7U378ESKp1Z6CQ0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_ORD 51
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_REQUIRES_ORDS \
	50, /* /soc/flash-controller@40030000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_SUPPORTS_ORDS \
	52, /* /soc/flash-controller@40030000/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_40030000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_40030000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_REG_IDX_0_VAL_SIZE 720896 /* 0xb0000 */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_erase_block_size 8192
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_write_block_size 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_reg {0 /* 0x0 */, 720896 /* 0xb0000 */}
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_reg_IDX_1 720896
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40030000/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_PATH "/soc/flash-controller@40030000/flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FULL_NAME "partitions"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FULL_NAME_UNQUOTED partitions
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FULL_NAME_TOKEN partitions
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FULL_NAME_UPPER_TOKEN PARTITIONS

/* Node parent (/soc/flash-controller@40030000/flash@0) identifier: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_flash_controller_40030000_S_flash_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_40030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_CHILD_NUM 3
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_HASH c4lQ7fNup6bPNnldzeIiLiyeZ20NoN7Wp6HIyQ54u5Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_ORD 52
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_REQUIRES_ORDS \
	51, /* /soc/flash-controller@40030000/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_SUPPORTS_ORDS \
	53, /* /soc/flash-controller@40030000/flash@0/partitions/partition@0 */ \
	54, /* /soc/flash-controller@40030000/flash@0/partitions/partition@20000 */ \
	55, /* /soc/flash-controller@40030000/flash@0/partitions/partition@affa8 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@40030000/flash@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_PATH "/soc/flash-controller@40030000/flash@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FULL_NAME "partition@0"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FULL_NAME_UNQUOTED partition@0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FULL_NAME_TOKEN partition_0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FULL_NAME_UPPER_TOKEN PARTITION_0

/* Node parent (/soc/flash-controller@40030000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_NODELABEL(fn) fn(boot_partition)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(boot_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_40030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_HASH fRvjJL0p_7soGHQIoGjHMHv6U9DXdZZjdTzSjP_e1_I

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_ORD 53
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	52, /* /soc/flash-controller@40030000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label_IDX_0 "mcuboot"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1 131072
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40030000/flash@0/partitions/partition@20000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_PATH "/soc/flash-controller@40030000/flash@0/partitions/partition@20000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME "partition@20000"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_UNQUOTED partition@20000
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_TOKEN partition_20000
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_UPPER_TOKEN PARTITION_20000

/* Node parent (/soc/flash-controller@40030000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_PARENT DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_NODELABEL(fn) fn(slot0_partition)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_40030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_HASH Dh12bI7nNBgwJiRN8xf2P3TViX061QCX0hlqx8VkS1Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_ORD 54
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_REQUIRES_ORDS \
	52, /* /soc/flash-controller@40030000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_VAL_ADDRESS 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_VAL_SIZE 581632 /* 0x8e000 */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label_IDX_0 "image-0"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000, label, 0)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000, label, 0)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_reg {131072 /* 0x20000 */, 581632 /* 0x8e000 */}
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_0 131072
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_1 581632
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40030000/flash@0/partitions/partition@affa8
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_PATH "/soc/flash-controller@40030000/flash@0/partitions/partition@affa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FULL_NAME "partition@affa8"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FULL_NAME_UNQUOTED partition@affa8
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FULL_NAME_TOKEN partition_affa8
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FULL_NAME_UPPER_TOKEN PARTITION_AFFA8

/* Node parent (/soc/flash-controller@40030000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_PARENT DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_NODELABEL(fn) fn(ti_ccfg_partition)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_NODELABEL_VARGS(fn, ...) fn(ti_ccfg_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_40030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_HASH PI2iCBql_AG5haUPo9oPvEoqNuSjIZu3vC_iqzCp_u4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_ORD 55
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_REQUIRES_ORDS \
	52, /* /soc/flash-controller@40030000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8
#define DT_N_NODELABEL_ti_ccfg_partition DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_REG_IDX_0_VAL_ADDRESS 720808 /* 0xaffa8 */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_REG_IDX_0_VAL_SIZE 88 /* 0x58 */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region "FLASH_CCFG"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region_STRING_UNQUOTED FLASH_CCFG
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region_STRING_TOKEN FLASH_CCFG
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region_STRING_UPPER_TOKEN FLASH_CCFG
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region_IDX_0 "FLASH_CCFG"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, zephyr_memory_region, 0)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, zephyr_memory_region, 0)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible {"zephyr,memory-region"}
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_reg {720808 /* 0xaffa8 */, 88 /* 0x58 */}
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_reg_IDX_0 720808
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_reg_IDX_1 88
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40002000/msp430-usbbridge@4
 *
 * Node identifier: DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_PATH "/soc/i2c@40002000/msp430-usbbridge@4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FULL_NAME "msp430-usbbridge@4"
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FULL_NAME_UNQUOTED msp430-usbbridge@4
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FULL_NAME_TOKEN msp430_usbbridge_4
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FULL_NAME_UPPER_TOKEN MSP430_USBBRIDGE_4

/* Node parent (/soc/i2c@40002000) identifier: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_PARENT DT_N_S_soc_S_i2c_40002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_NODELABEL(fn) fn(mcu)
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcu, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_40002000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_HASH GeSAE_rnzQeXT2hQlEtH6B008AB_oMQJFAPafcfzKI4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_ORD 56
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_REQUIRES_ORDS \
	27, /* /soc/i2c@40002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_EXISTS 1
#define DT_N_INST_0_beagle_usbbridge DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4
#define DT_N_NODELABEL_mcu           DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4

/* Bus info (controller: '/soc/i2c@40002000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_BUS DT_N_S_soc_S_i2c_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_REG_NUM 1
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_REG_IDX_0_VAL_ADDRESS 4 /* 0x4 */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_COMPAT_MATCHES_beagle_usbbridge 1
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_COMPAT_VENDOR_IDX_0 "BeagleBoard.org Foundation"
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_COMPAT_MODEL_IDX_0 "usbbridge"
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible {"beagle,usbbridge"}
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible_IDX_0 "beagle,usbbridge"
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible_IDX_0_STRING_UNQUOTED beagle,usbbridge
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible_IDX_0_STRING_TOKEN beagle_usbbridge
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible_IDX_0_STRING_UPPER_TOKEN BEAGLE_USBBRIDGE
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4, compatible, 0)
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4, compatible, 0)
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_reg {4 /* 0x4 */}
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_reg_IDX_0 4
#define DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/radio@40040000
 *
 * Node identifier: DT_N_S_soc_S_radio_40040000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-radio):
 *   $ZEPHYR_BASE/dts/bindings/net/wireless/ti,cc13xx-cc26xx-radio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_40040000_PATH "/soc/radio@40040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_40040000_FULL_NAME "radio@40040000"
#define DT_N_S_soc_S_radio_40040000_FULL_NAME_UNQUOTED radio@40040000
#define DT_N_S_soc_S_radio_40040000_FULL_NAME_TOKEN radio_40040000
#define DT_N_S_soc_S_radio_40040000_FULL_NAME_UPPER_TOKEN RADIO_40040000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_radio_40040000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_40040000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_radio_40040000_NODELABEL_NUM 1
#define DT_N_S_soc_S_radio_40040000_FOREACH_NODELABEL(fn) fn(radio)
#define DT_N_S_soc_S_radio_40040000_FOREACH_NODELABEL_VARGS(fn, ...) fn(radio, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_40040000_CHILD_NUM 2
#define DT_N_S_soc_S_radio_40040000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_radio_40040000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g)
#define DT_N_S_soc_S_radio_40040000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g)
#define DT_N_S_soc_S_radio_40040000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g)
#define DT_N_S_soc_S_radio_40040000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g)
#define DT_N_S_soc_S_radio_40040000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_radio_40040000_HASH Ji3QjwDnlKsxa3tXwuATkyXIw95umXyEoHm0vOmDMhM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_40040000_ORD 57
#define DT_N_S_soc_S_radio_40040000_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_40040000_REQUIRES_ORDS \
	2, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_40040000_SUPPORTS_ORDS \
	58, /* /soc/radio@40040000/ieee802154 */ \
	59, /* /soc/radio@40040000/ieee802154g */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_40040000_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_radio DT_N_S_soc_S_radio_40040000
#define DT_N_NODELABEL_radio               DT_N_S_soc_S_radio_40040000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_40040000_REG_NUM 4
#define DT_N_S_soc_S_radio_40040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_REG_IDX_0_VAL_ADDRESS 1074003968 /* 0x40040000 */
#define DT_N_S_soc_S_radio_40040000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_radio_40040000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_REG_IDX_1_VAL_ADDRESS 1074008064 /* 0x40041000 */
#define DT_N_S_soc_S_radio_40040000_REG_IDX_1_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_radio_40040000_REG_IDX_2_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_REG_IDX_2_VAL_ADDRESS 1074016256 /* 0x40043000 */
#define DT_N_S_soc_S_radio_40040000_REG_IDX_2_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_radio_40040000_REG_IDX_3_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_REG_IDX_3_VAL_ADDRESS 1074020352 /* 0x40044000 */
#define DT_N_S_soc_S_radio_40040000_REG_IDX_3_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_PWR_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_PWR_VAL_ADDRESS DT_N_S_soc_S_radio_40040000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_PWR_VAL_SIZE DT_N_S_soc_S_radio_40040000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_DBELL_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_DBELL_VAL_ADDRESS DT_N_S_soc_S_radio_40040000_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_DBELL_VAL_SIZE DT_N_S_soc_S_radio_40040000_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_RAT_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_RAT_VAL_ADDRESS DT_N_S_soc_S_radio_40040000_REG_IDX_2_VAL_ADDRESS
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_RAT_VAL_SIZE DT_N_S_soc_S_radio_40040000_REG_IDX_2_VAL_SIZE
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_FSCA_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_FSCA_VAL_ADDRESS DT_N_S_soc_S_radio_40040000_REG_IDX_3_VAL_ADDRESS
#define DT_N_S_soc_S_radio_40040000_REG_NAME_RFC_FSCA_VAL_SIZE DT_N_S_soc_S_radio_40040000_REG_IDX_3_VAL_SIZE
#define DT_N_S_soc_S_radio_40040000_RANGES_NUM 0
#define DT_N_S_soc_S_radio_40040000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_40040000_IRQ_NUM 0
#define DT_N_S_soc_S_radio_40040000_IRQ_LEVEL 0
#define DT_N_S_soc_S_radio_40040000_COMPAT_MATCHES_ti_cc13xx_cc26xx_radio 1
#define DT_N_S_soc_S_radio_40040000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_radio_40040000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-radio"
#define DT_N_S_soc_S_radio_40040000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_40040000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_40040000_P_reg {1074003968 /* 0x40040000 */, 4096 /* 0x1000 */, 1074008064 /* 0x40041000 */, 8192 /* 0x2000 */, 1074016256 /* 0x40043000 */, 4096 /* 0x1000 */, 1074020352 /* 0x40044000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_0 1074003968
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_2 1074008064
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_3 8192
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_4 1074016256
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_5 4096
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_6 1074020352
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_IDX_7 4096
#define DT_N_S_soc_S_radio_40040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_status "disabled"
#define DT_N_S_soc_S_radio_40040000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_radio_40040000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_radio_40040000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_radio_40040000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_radio_40040000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_radio_40040000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40040000, status, 0)
#define DT_N_S_soc_S_radio_40040000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40040000, status, 0)
#define DT_N_S_soc_S_radio_40040000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_P_status_LEN 1
#define DT_N_S_soc_S_radio_40040000_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_compatible {"ti,cc13xx-cc26xx-radio"}
#define DT_N_S_soc_S_radio_40040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-radio"
#define DT_N_S_soc_S_radio_40040000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-radio
#define DT_N_S_soc_S_radio_40040000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_radio
#define DT_N_S_soc_S_radio_40040000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_RADIO
#define DT_N_S_soc_S_radio_40040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40040000, compatible, 0)
#define DT_N_S_soc_S_radio_40040000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40040000, compatible, 0)
#define DT_N_S_soc_S_radio_40040000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_40040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_names {"RFC_PWR", "RFC_DBELL", "RFC_RAT", "RFC_FSCA"}
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_0 "RFC_PWR"
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_0_STRING_UNQUOTED RFC_PWR
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_0_STRING_TOKEN RFC_PWR
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_0_STRING_UPPER_TOKEN RFC_PWR
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_1 "RFC_DBELL"
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_1_STRING_UNQUOTED RFC_DBELL
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_1_STRING_TOKEN RFC_DBELL
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_1_STRING_UPPER_TOKEN RFC_DBELL
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_2 "RFC_RAT"
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_2_STRING_UNQUOTED RFC_RAT
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_2_STRING_TOKEN RFC_RAT
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_2_STRING_UPPER_TOKEN RFC_RAT
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_3 "RFC_FSCA"
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_3_STRING_UNQUOTED RFC_FSCA
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_3_STRING_TOKEN RFC_FSCA
#define DT_N_S_soc_S_radio_40040000_P_reg_names_IDX_3_STRING_UPPER_TOKEN RFC_FSCA
#define DT_N_S_soc_S_radio_40040000_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40040000, reg_names, 0) \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 1) \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 2) \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 3)
#define DT_N_S_soc_S_radio_40040000_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40040000, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 3)
#define DT_N_S_soc_S_radio_40040000_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40040000, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40040000, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_radio_40040000, reg_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_P_reg_names_LEN 4
#define DT_N_S_soc_S_radio_40040000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_radio_40040000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_wakeup_source 0
#define DT_N_S_soc_S_radio_40040000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_40040000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/radio@40040000/ieee802154
 *
 * Node identifier: DT_N_S_soc_S_radio_40040000_S_ieee802154
 *
 * Binding (compatible = ti,cc13xx-cc26xx-ieee802154):
 *   $ZEPHYR_BASE/dts/bindings/ieee802154/ti,cc13xx-cc26xx-ieee802154.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_PATH "/soc/radio@40040000/ieee802154"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FULL_NAME "ieee802154"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FULL_NAME_UNQUOTED ieee802154
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FULL_NAME_TOKEN ieee802154
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FULL_NAME_UPPER_TOKEN IEEE802154

/* Node parent (/soc/radio@40040000) identifier: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_PARENT DT_N_S_soc_S_radio_40040000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_NODELABEL_NUM 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_NODELABEL(fn) fn(ieee802154)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_NODELABEL_VARGS(fn, ...) fn(ieee802154, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_radio_40040000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_CHILD_NUM 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_HASH o1OmS8eWf11O1_2Lkll17BrbXHau_u_rTNiyaQ34p2o

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_ORD 58
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_REQUIRES_ORDS \
	57, /* /soc/radio@40040000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_ieee802154 DT_N_S_soc_S_radio_40040000_S_ieee802154
#define DT_N_NODELABEL_ieee802154               DT_N_S_soc_S_radio_40040000_S_ieee802154

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_REG_NUM 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_RANGES_NUM 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_IRQ_NUM 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_IRQ_LEVEL 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_COMPAT_MATCHES_ti_cc13xx_cc26xx_ieee802154 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-ieee802154"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status "disabled"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154, status, 0)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154, status, 0)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_LEN 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible {"ti,cc13xx-cc26xx-ieee802154"}
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible_IDX_0 "ti,cc13xx-cc26xx-ieee802154"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-ieee802154
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_ieee802154
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_IEEE802154
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154, compatible, 0)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154, compatible, 0)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_wakeup_source 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/radio@40040000/ieee802154g
 *
 * Node identifier: DT_N_S_soc_S_radio_40040000_S_ieee802154g
 *
 * Binding (compatible = ti,cc13xx-cc26xx-ieee802154-subghz):
 *   $ZEPHYR_BASE/dts/bindings/ieee802154/ti,cc13xx-cc26xx-ieee802154-subghz.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_PATH "/soc/radio@40040000/ieee802154g"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FULL_NAME "ieee802154g"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FULL_NAME_UNQUOTED ieee802154g
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FULL_NAME_TOKEN ieee802154g
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FULL_NAME_UPPER_TOKEN IEEE802154G

/* Node parent (/soc/radio@40040000) identifier: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_PARENT DT_N_S_soc_S_radio_40040000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_NODELABEL_NUM 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_NODELABEL(fn) fn(ieee802154g)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_NODELABEL_VARGS(fn, ...) fn(ieee802154g, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_radio_40040000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_CHILD_NUM 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_HASH ylVFPeinnR91jOyW_0ucpt4thwPvt3DIcRybwEkPZ8k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_ORD 59
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_REQUIRES_ORDS \
	57, /* /soc/radio@40040000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_ieee802154_subghz DT_N_S_soc_S_radio_40040000_S_ieee802154g
#define DT_N_NODELABEL_ieee802154g                     DT_N_S_soc_S_radio_40040000_S_ieee802154g

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_REG_NUM 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_RANGES_NUM 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_IRQ_NUM 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_IRQ_LEVEL 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_COMPAT_MATCHES_ti_cc13xx_cc26xx_ieee802154_subghz 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-ieee802154-subghz"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status "okay"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, status, 0)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, status, 0)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_LEN 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible {"ti,cc13xx-cc26xx-ieee802154-subghz"}
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible_IDX_0 "ti,cc13xx-cc26xx-ieee802154-subghz"
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-ieee802154-subghz
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_ieee802154_subghz
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_IEEE802154_SUBGHZ
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, compatible, 0)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, compatible, 0)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_wakeup_source 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_40040000_S_ieee802154g_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/spi0_cs0_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_PATH "/soc/pinctrl@40081000/spi0_cs0_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FULL_NAME "spi0_cs0_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FULL_NAME_UNQUOTED spi0_cs0_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FULL_NAME_TOKEN spi0_cs0_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FULL_NAME_UPPER_TOKEN SPI0_CS0_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_NODELABEL(fn) fn(spi0_cs0_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_cs0_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_HASH 18gje7A3fbIWDIOJVdoK19zdnw9mF1E61LXaprMJVSU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_ORD 60
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_SUPPORTS_ORDS \
	66, /* /soc/spi@40000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_EXISTS 1
#define DT_N_NODELABEL_spi0_cs0_default DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_pinmux {8 /* 0x8 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_pinmux_IDX_0 8
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/spi0_cs1_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_PATH "/soc/pinctrl@40081000/spi0_cs1_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FULL_NAME "spi0_cs1_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FULL_NAME_UNQUOTED spi0_cs1_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FULL_NAME_TOKEN spi0_cs1_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FULL_NAME_UPPER_TOKEN SPI0_CS1_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_NODELABEL(fn) fn(spi0_cs1_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_cs1_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_HASH fYEQjJCplsIk4ke5okaoha_a7lRA4JujEu9F3glYat0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_ORD 61
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_SUPPORTS_ORDS \
	66, /* /soc/spi@40000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_EXISTS 1
#define DT_N_NODELABEL_spi0_cs1_default DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_pinmux {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_pinmux_IDX_0 28
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/spi0_cs2_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_PATH "/soc/pinctrl@40081000/spi0_cs2_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FULL_NAME "spi0_cs2_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FULL_NAME_UNQUOTED spi0_cs2_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FULL_NAME_TOKEN spi0_cs2_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FULL_NAME_UPPER_TOKEN SPI0_CS2_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_NODELABEL(fn) fn(spi0_cs2_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_cs2_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_HASH CMZz3h4ZfsYDwFFSL4sDd7wz7JuOgS22s7H4BH1ml98

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_ORD 62
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_SUPPORTS_ORDS \
	66, /* /soc/spi@40000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_EXISTS 1
#define DT_N_NODELABEL_spi0_cs2_default DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_pinmux {27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_pinmux_IDX_0 27
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/spi0_miso_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_PATH "/soc/pinctrl@40081000/spi0_miso_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FULL_NAME "spi0_miso_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FULL_NAME_UNQUOTED spi0_miso_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FULL_NAME_TOKEN spi0_miso_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FULL_NAME_UPPER_TOKEN SPI0_MISO_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_NODELABEL(fn) fn(spi0_miso_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_miso_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_HASH khF2ivcVe_ftqZuz6_z4HjfAypH5fF0qlhlNINJKCsY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_ORD 63
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_SUPPORTS_ORDS \
	66, /* /soc/spi@40000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_EXISTS 1
#define DT_N_NODELABEL_spi0_miso_default DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_pinmux {11 /* 0xb */, 9 /* 0x9 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_pinmux_IDX_0 11
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_pinmux_IDX_1 9
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_input_enable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/spi0_mosi_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_PATH "/soc/pinctrl@40081000/spi0_mosi_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FULL_NAME "spi0_mosi_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FULL_NAME_UNQUOTED spi0_mosi_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FULL_NAME_TOKEN spi0_mosi_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FULL_NAME_UPPER_TOKEN SPI0_MOSI_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_NODELABEL(fn) fn(spi0_mosi_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_mosi_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_HASH TrnmJtvRz8Xf6PapzTGQcwlZ5m4FOBWBeOiH3fqko5k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_ORD 64
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_SUPPORTS_ORDS \
	66, /* /soc/spi@40000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_EXISTS 1
#define DT_N_NODELABEL_spi0_mosi_default DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_pinmux {9 /* 0x9 */, 10 /* 0xa */}
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_pinmux_IDX_0 9
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_pinmux_IDX_1 10
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/spi0_sck_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_PATH "/soc/pinctrl@40081000/spi0_sck_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FULL_NAME "spi0_sck_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FULL_NAME_UNQUOTED spi0_sck_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FULL_NAME_TOKEN spi0_sck_default
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FULL_NAME_UPPER_TOKEN SPI0_SCK_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_NODELABEL(fn) fn(spi0_sck_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_sck_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_HASH 9PFvjtb171xeA4pda8hkEF0qxMn4KvW0FM1sa943GuU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_ORD 65
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_SUPPORTS_ORDS \
	66, /* /soc/spi@40000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_EXISTS 1
#define DT_N_NODELABEL_spi0_sck_default DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_pinmux {10 /* 0xa */, 12 /* 0xc */}
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_pinmux_IDX_0 10
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_pinmux_IDX_1 12
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/spi@40000000
 *
 * Node identifier: DT_N_S_soc_S_spi_40000000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/ti,cc13xx-cc26xx-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40000000_PATH "/soc/spi@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40000000_FULL_NAME "spi@40000000"
#define DT_N_S_soc_S_spi_40000000_FULL_NAME_UNQUOTED spi@40000000
#define DT_N_S_soc_S_spi_40000000_FULL_NAME_TOKEN spi_40000000
#define DT_N_S_soc_S_spi_40000000_FULL_NAME_UPPER_TOKEN SPI_40000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40000000_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40000000_FOREACH_NODELABEL(fn) fn(spi0)
#define DT_N_S_soc_S_spi_40000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40000000_CHILD_NUM 1
#define DT_N_S_soc_S_spi_40000000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_spi_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0)
#define DT_N_S_soc_S_spi_40000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0)
#define DT_N_S_soc_S_spi_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0)
#define DT_N_S_soc_S_spi_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0)
#define DT_N_S_soc_S_spi_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_spi_40000000_HASH J9XCIrKgsJDXpHnoyZpXJ_lPigaiJA4KrNSpnHubhxU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40000000_ORD 66
#define DT_N_S_soc_S_spi_40000000_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40000000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */ \
	4, /* /soc/gpio@40022000 */ \
	60, /* /soc/pinctrl@40081000/spi0_cs0_default */ \
	61, /* /soc/pinctrl@40081000/spi0_cs1_default */ \
	62, /* /soc/pinctrl@40081000/spi0_cs2_default */ \
	63, /* /soc/pinctrl@40081000/spi0_miso_default */ \
	64, /* /soc/pinctrl@40081000/spi0_mosi_default */ \
	65, /* /soc/pinctrl@40081000/spi0_sck_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40000000_SUPPORTS_ORDS \
	67, /* /soc/spi@40000000/gd25q16c@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40000000_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_spi DT_N_S_soc_S_spi_40000000
#define DT_N_NODELABEL_spi0              DT_N_S_soc_S_spi_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40000000_REG_NUM 1
#define DT_N_S_soc_S_spi_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_spi_40000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_IRQ_IDX_0_VAL_irq 7
#define DT_N_S_soc_S_spi_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40000000_COMPAT_MATCHES_ti_cc13xx_cc26xx_spi 1
#define DT_N_S_soc_S_spi_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_spi_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-spi"
#define DT_N_S_soc_S_spi_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40000000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40000000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40000000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40000000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40000000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default
#define DT_N_S_soc_S_spi_40000000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default
#define DT_N_S_soc_S_spi_40000000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default
#define DT_N_S_soc_S_spi_40000000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default
#define DT_N_S_soc_S_spi_40000000_PINCTRL_NAME_default_IDX_4_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default
#define DT_N_S_soc_S_spi_40000000_PINCTRL_NAME_default_IDX_5_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40000000_P_reg {1073741824 /* 0x40000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_spi_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_gpio_40022000
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_0_VAL_pin 8
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_1_PH DT_N_S_soc_S_gpio_40022000
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_1_VAL_pin 28
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_1_VAL_flags 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_2_PH DT_N_S_soc_S_gpio_40022000
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_2_VAL_pin 27
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_2_VAL_flags 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 0) \
	fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 1) \
	fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 2)
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 2)
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, cs_gpios, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_LEN 3
#define DT_N_S_soc_S_spi_40000000_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_status "okay"
#define DT_N_S_soc_S_spi_40000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40000000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40000000, status, 0)
#define DT_N_S_soc_S_spi_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000, status, 0)
#define DT_N_S_soc_S_spi_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_compatible {"ti,cc13xx-cc26xx-spi"}
#define DT_N_S_soc_S_spi_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-spi"
#define DT_N_S_soc_S_spi_40000000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-spi
#define DT_N_S_soc_S_spi_40000000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_spi
#define DT_N_S_soc_S_spi_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_SPI
#define DT_N_S_soc_S_spi_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40000000, compatible, 0)
#define DT_N_S_soc_S_spi_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000, compatible, 0)
#define DT_N_S_soc_S_spi_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_interrupts {7 /* 0x7 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_interrupts_IDX_0 7
#define DT_N_S_soc_S_spi_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_4 DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_4_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_4_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_5 DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_5_PH DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_IDX_5_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 3) \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 4) \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 5)
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 5)
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 5, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000, pinctrl_0, 5, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_LEN 6
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40000000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40000000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/spi@40000000/gd25q16c@0
 *
 * Node identifier: DT_N_S_soc_S_spi_40000000_S_gd25q16c_0
 *
 * Binding (compatible = jedec,spi-nor):
 *   $ZEPHYR_BASE/dts/bindings/mtd/jedec,spi-nor.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_PATH "/soc/spi@40000000/gd25q16c@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FULL_NAME "gd25q16c@0"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FULL_NAME_UNQUOTED gd25q16c@0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FULL_NAME_TOKEN gd25q16c_0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FULL_NAME_UPPER_TOKEN GD25Q16C_0

/* Node parent (/soc/spi@40000000) identifier: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_PARENT DT_N_S_soc_S_spi_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_NODELABEL(fn) fn(spi_flash0)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi_flash0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_spi_40000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_CHILD_NUM 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_HASH OGDWnib0Un7zy67uK2YJ689sA20AGz17Nwe4sSrKRrI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_ORD 67
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_REQUIRES_ORDS \
	66, /* /soc/spi@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_SUPPORTS_ORDS \
	68, /* /soc/spi@40000000/gd25q16c@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_EXISTS 1
#define DT_N_INST_0_jedec_spi_nor DT_N_S_soc_S_spi_40000000_S_gd25q16c_0
#define DT_N_NODELABEL_spi_flash0 DT_N_S_soc_S_spi_40000000_S_gd25q16c_0

/* Bus info (controller: '/soc/spi@40000000', type: '['spi']') */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_BUS_spi 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_BUS DT_N_S_soc_S_spi_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_REG_NUM 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_COMPAT_MATCHES_jedec_spi_nor 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_COMPAT_VENDOR_IDX_0 "JEDEC Solid State Technology Association"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_COMPAT_MODEL_IDX_0 "spi-nor"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_spi_max_frequency 2000000
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_duplex 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_duplex_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_duplex_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_duplex_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_frame_format 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_frame_format_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_frame_format_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_frame_format_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_spi_cpol 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_spi_cpol_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_spi_cpha 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_spi_cpha_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_spi_hold_cs 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_spi_hold_cs_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible {"jedec,spi-nor"}
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible_IDX_0 "jedec,spi-nor"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible_IDX_0_STRING_UNQUOTED jedec,spi-nor
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible_IDX_0_STRING_TOKEN jedec_spi_nor
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible_IDX_0_STRING_UPPER_TOKEN JEDEC_SPI_NOR
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, compatible, 0)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, compatible, 0)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_requires_ulbpr 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_requires_ulbpr_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_has_dpd 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_has_dpd_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_t_enter_dpd 20000
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_t_enter_dpd_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_t_exit_dpd 100000
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_t_exit_dpd_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_use_4b_addr_opcodes 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_use_4b_addr_opcodes_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id {200 /* 0xc8 */, 64 /* 0x40 */, 21 /* 0x15 */}
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_IDX_0 200
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_IDX_1 64
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_IDX_2 21
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 0) \
	fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 1) \
	fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 2)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 2)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, jedec_id, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_LEN 3
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_jedec_id_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_size 2097152
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_P_size_EXISTS 1

/*
 * Devicetree node: /soc/spi@40000000/gd25q16c@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_PATH "/soc/spi@40000000/gd25q16c@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FULL_NAME "partitions"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FULL_NAME_UNQUOTED partitions
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FULL_NAME_TOKEN partitions
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FULL_NAME_UPPER_TOKEN PARTITIONS

/* Node parent (/soc/spi@40000000/gd25q16c@0) identifier: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_PARENT DT_N_S_soc_S_spi_40000000_S_gd25q16c_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0) fn(DT_N_S_soc_S_spi_40000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_CHILD_NUM 3
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_HASH 82l8g5jtTf_Gy2V_zS6eSHp7c0HsFXMsiGlKyqwqGrw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_ORD 68
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_REQUIRES_ORDS \
	67, /* /soc/spi@40000000/gd25q16c@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_SUPPORTS_ORDS \
	69, /* /soc/spi@40000000/gd25q16c@0/partitions/partition@0 */ \
	70, /* /soc/spi@40000000/gd25q16c@0/partitions/partition@8e000 */ \
	71, /* /soc/spi@40000000/gd25q16c@0/partitions/partition@ae000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_EXISTS 1
#define DT_N_INST_1_fixed_partitions DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/spi@40000000/gd25q16c@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_PATH "/soc/spi@40000000/gd25q16c@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FULL_NAME "partition@0"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FULL_NAME_UNQUOTED partition@0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FULL_NAME_TOKEN partition_0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FULL_NAME_UPPER_TOKEN PARTITION_0

/* Node parent (/soc/spi@40000000/gd25q16c@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_NODELABEL(fn) fn(slot1_partition)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_partition, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0) fn(DT_N_S_soc_S_spi_40000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_HASH 1XMLSt0oBefGPFb9edPwcrBWGEUKPiAmdh83M5mdorE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_ORD 69
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	68, /* /soc/spi@40000000/gd25q16c@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 581632 /* 0x8e000 */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label "image-1"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label_IDX_0 "image-1"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 581632 /* 0x8e000 */}
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_reg_IDX_1 581632
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@40000000/gd25q16c@0/partitions/partition@8e000
 *
 * Node identifier: DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_PATH "/soc/spi@40000000/gd25q16c@0/partitions/partition@8e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FULL_NAME "partition@8e000"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FULL_NAME_UNQUOTED partition@8e000
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FULL_NAME_TOKEN partition_8e000
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FULL_NAME_UPPER_TOKEN PARTITION_8E000

/* Node parent (/soc/spi@40000000/gd25q16c@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_PARENT DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_NODELABEL(fn) fn(scratch_partition)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(scratch_partition, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0) fn(DT_N_S_soc_S_spi_40000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_HASH RMNXRzSA8BNHtOxAtQosKCRZDUlF8QVE_pHWTJKptTs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_ORD 70
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_REQUIRES_ORDS \
	68, /* /soc/spi@40000000/gd25q16c@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_REG_NUM 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_REG_IDX_0_VAL_ADDRESS 581632 /* 0x8e000 */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_IRQ_LEVEL 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label "image-scratch"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label_STRING_UNQUOTED image-scratch
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label_IDX_0 "image-scratch"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000, label, 0)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000, label, 0)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label_LEN 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_read_only 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_reg {581632 /* 0x8e000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_reg_IDX_0 581632
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@40000000/gd25q16c@0/partitions/partition@ae000
 *
 * Node identifier: DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_PATH "/soc/spi@40000000/gd25q16c@0/partitions/partition@ae000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FULL_NAME "partition@ae000"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FULL_NAME_UNQUOTED partition@ae000
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FULL_NAME_TOKEN partition_ae000
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FULL_NAME_UPPER_TOKEN PARTITION_AE000

/* Node parent (/soc/spi@40000000/gd25q16c@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_PARENT DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_NODELABEL(fn) fn(storage_partition)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_NODELABEL_VARGS(fn, ...) fn(storage_partition, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0) fn(DT_N_S_soc_S_spi_40000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_HASH RmpL4_aL5FLD9pgqf0VSNfw1tbbCFFLqAKuKOBEvZ3Q

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_ORD 71
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_REQUIRES_ORDS \
	68, /* /soc/spi@40000000/gd25q16c@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_REG_NUM 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_REG_IDX_0_VAL_ADDRESS 712704 /* 0xae000 */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_IRQ_LEVEL 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_PARTITION_ID 5

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label "storage"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000, label, 0)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000, label, 0)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label_LEN 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_read_only 0
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_reg {712704 /* 0xae000 */, 1048576 /* 0x100000 */}
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_reg_IDX_0 712704
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_reg_IDX_1 1048576
#define DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/timer@40010000
 *
 * Node identifier: DT_N_S_soc_S_timer_40010000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/ti,cc13xx-cc26xx-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40010000_PATH "/soc/timer@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40010000_FULL_NAME "timer@40010000"
#define DT_N_S_soc_S_timer_40010000_FULL_NAME_UNQUOTED timer@40010000
#define DT_N_S_soc_S_timer_40010000_FULL_NAME_TOKEN timer_40010000
#define DT_N_S_soc_S_timer_40010000_FULL_NAME_UPPER_TOKEN TIMER_40010000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40010000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40010000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40010000_FOREACH_NODELABEL(fn) fn(gpt0)
#define DT_N_S_soc_S_timer_40010000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpt0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40010000_CHILD_NUM 1
#define DT_N_S_soc_S_timer_40010000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_timer_40010000_HASH A_OtC2jXimZGT3yBbDf9ohp55SQrd_PWxUz_IQTYG5M

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40010000_ORD 72
#define DT_N_S_soc_S_timer_40010000_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40010000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40010000_SUPPORTS_ORDS \
	74, /* /soc/timer@40010000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40010000_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_timer DT_N_S_soc_S_timer_40010000
#define DT_N_NODELABEL_gpt0                DT_N_S_soc_S_timer_40010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40010000_REG_NUM 1
#define DT_N_S_soc_S_timer_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_timer_40010000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40010000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40010000_IRQ_NUM 2
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_irq 16
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40010000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_gpt0a_VAL_irq DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_gpt0a_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_gpt0a_VAL_priority DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_gpt0a_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_gpt0a_CONTROLLER DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_gpt0b_VAL_irq DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_gpt0b_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_gpt0b_VAL_priority DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_gpt0b_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_gpt0b_CONTROLLER DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timer_40010000_COMPAT_MATCHES_ti_cc13xx_cc26xx_timer 1
#define DT_N_S_soc_S_timer_40010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_timer_40010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-timer"
#define DT_N_S_soc_S_timer_40010000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40010000_P_reg {1073807360 /* 0x40010000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_timer_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts {15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_2 16
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timer_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_status "okay"
#define DT_N_S_soc_S_timer_40010000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_40010000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40010000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40010000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_40010000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40010000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000, status, 0)
#define DT_N_S_soc_S_timer_40010000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000, status, 0)
#define DT_N_S_soc_S_timer_40010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_compatible {"ti,cc13xx-cc26xx-timer"}
#define DT_N_S_soc_S_timer_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-timer"
#define DT_N_S_soc_S_timer_40010000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-timer
#define DT_N_S_soc_S_timer_40010000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_timer
#define DT_N_S_soc_S_timer_40010000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_TIMER
#define DT_N_S_soc_S_timer_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000, compatible, 0)
#define DT_N_S_soc_S_timer_40010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000, compatible, 0)
#define DT_N_S_soc_S_timer_40010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names {"gpt0a", "gpt0b"}
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_0 "gpt0a"
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_0_STRING_UNQUOTED gpt0a
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_0_STRING_TOKEN gpt0a
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GPT0A
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_1 "gpt0b"
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_1_STRING_UNQUOTED gpt0b
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_1_STRING_TOKEN gpt0b
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN GPT0B
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 1)
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 1)
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40010000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40010000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/pwm0_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_PATH "/soc/pinctrl@40081000/pwm0_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FULL_NAME "pwm0_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FULL_NAME_UNQUOTED pwm0_default
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FULL_NAME_TOKEN pwm0_default
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FULL_NAME_UPPER_TOKEN PWM0_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_NODELABEL(fn) fn(pwm0_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm0_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_HASH zkCLYUzmhx8p178zoMfcgm1NNOy1WgEc2yMjGAV1nLk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_ORD 73
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_SUPPORTS_ORDS \
	74, /* /soc/timer@40010000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_EXISTS 1
#define DT_N_NODELABEL_pwm0_default DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_pinmux {17 /* 0x11 */, 24 /* 0x18 */}
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_pinmux_IDX_0 17
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_pinmux_IDX_1 24
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/timer@40010000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40010000_S_pwm
 *
 * Binding (compatible = ti,cc13xx-cc26xx-timer-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/ti,cc13xx-cc26xx-timer-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_PATH "/soc/timer@40010000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timer_40010000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timer_40010000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timer_40010000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timer@40010000) identifier: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_PARENT DT_N_S_soc_S_timer_40010000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_NODELABEL(fn) fn(pwm0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timer_40010000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40010000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_HASH e2_XMV4BVNvVcjLSoVoyA_EZ_fA2kB1UuiDTCejZ1mE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_ORD 74
#define DT_N_S_soc_S_timer_40010000_S_pwm_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_REQUIRES_ORDS \
	72, /* /soc/timer@40010000 */ \
	73, /* /soc/pinctrl@40081000/pwm0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_EXISTS 1
#define DT_N_INST_0_ti_cc13xx_cc26xx_timer_pwm DT_N_S_soc_S_timer_40010000_S_pwm
#define DT_N_NODELABEL_pwm0                    DT_N_S_soc_S_timer_40010000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_COMPAT_MATCHES_ti_cc13xx_cc26xx_timer_pwm 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_timer_40010000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-timer-pwm"
#define DT_N_S_soc_S_timer_40010000_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible {"ti,cc13xx-cc26xx-timer-pwm"}
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_IDX_0 "ti,cc13xx-cc26xx-timer-pwm"
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-timer-pwm
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_timer_pwm
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_TIMER_PWM
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/timer@40011000
 *
 * Node identifier: DT_N_S_soc_S_timer_40011000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/ti,cc13xx-cc26xx-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40011000_PATH "/soc/timer@40011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40011000_FULL_NAME "timer@40011000"
#define DT_N_S_soc_S_timer_40011000_FULL_NAME_UNQUOTED timer@40011000
#define DT_N_S_soc_S_timer_40011000_FULL_NAME_TOKEN timer_40011000
#define DT_N_S_soc_S_timer_40011000_FULL_NAME_UPPER_TOKEN TIMER_40011000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40011000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40011000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40011000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40011000_FOREACH_NODELABEL(fn) fn(gpt1)
#define DT_N_S_soc_S_timer_40011000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpt1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40011000_CHILD_NUM 1
#define DT_N_S_soc_S_timer_40011000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_timer_40011000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40011000_S_pwm)
#define DT_N_S_soc_S_timer_40011000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40011000_S_pwm)
#define DT_N_S_soc_S_timer_40011000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timer_40011000_S_pwm)
#define DT_N_S_soc_S_timer_40011000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40011000_S_pwm)
#define DT_N_S_soc_S_timer_40011000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_timer_40011000_HASH tDw0aZPEE8kKpxnfBQgBtwImKROvbpmsXl5t2U43_ek

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40011000_ORD 75
#define DT_N_S_soc_S_timer_40011000_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40011000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40011000_SUPPORTS_ORDS \
	77, /* /soc/timer@40011000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40011000_EXISTS 1
#define DT_N_INST_1_ti_cc13xx_cc26xx_timer DT_N_S_soc_S_timer_40011000
#define DT_N_NODELABEL_gpt1                DT_N_S_soc_S_timer_40011000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40011000_REG_NUM 1
#define DT_N_S_soc_S_timer_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_timer_40011000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40011000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40011000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40011000_IRQ_NUM 2
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_1_VAL_irq 18
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40011000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_40011000_IRQ_NAME_gpt1a_VAL_irq DT_N_S_soc_S_timer_40011000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40011000_IRQ_NAME_gpt1a_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_NAME_gpt1a_VAL_priority DT_N_S_soc_S_timer_40011000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40011000_IRQ_NAME_gpt1a_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_NAME_gpt1a_CONTROLLER DT_N_S_soc_S_timer_40011000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timer_40011000_IRQ_NAME_gpt1b_VAL_irq DT_N_S_soc_S_timer_40011000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timer_40011000_IRQ_NAME_gpt1b_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_NAME_gpt1b_VAL_priority DT_N_S_soc_S_timer_40011000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timer_40011000_IRQ_NAME_gpt1b_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_IRQ_NAME_gpt1b_CONTROLLER DT_N_S_soc_S_timer_40011000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timer_40011000_COMPAT_MATCHES_ti_cc13xx_cc26xx_timer 1
#define DT_N_S_soc_S_timer_40011000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_timer_40011000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-timer"
#define DT_N_S_soc_S_timer_40011000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40011000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40011000_P_reg {1073811456 /* 0x40011000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_timer_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_interrupts {17 /* 0x11 */, 0 /* 0x0 */, 18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_timer_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40011000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_interrupts_IDX_2 18
#define DT_N_S_soc_S_timer_40011000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timer_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_status "okay"
#define DT_N_S_soc_S_timer_40011000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_40011000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40011000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40011000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_40011000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40011000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40011000, status, 0)
#define DT_N_S_soc_S_timer_40011000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40011000, status, 0)
#define DT_N_S_soc_S_timer_40011000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_compatible {"ti,cc13xx-cc26xx-timer"}
#define DT_N_S_soc_S_timer_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-timer"
#define DT_N_S_soc_S_timer_40011000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-timer
#define DT_N_S_soc_S_timer_40011000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_timer
#define DT_N_S_soc_S_timer_40011000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_TIMER
#define DT_N_S_soc_S_timer_40011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40011000, compatible, 0)
#define DT_N_S_soc_S_timer_40011000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40011000, compatible, 0)
#define DT_N_S_soc_S_timer_40011000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names {"gpt1a", "gpt1b"}
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_IDX_0 "gpt1a"
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_IDX_0_STRING_UNQUOTED gpt1a
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_IDX_0_STRING_TOKEN gpt1a
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GPT1A
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_IDX_1 "gpt1b"
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_IDX_1_STRING_UNQUOTED gpt1b
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_IDX_1_STRING_TOKEN gpt1b
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN GPT1B
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40011000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timer_40011000, interrupt_names, 1)
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40011000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40011000, interrupt_names, 1)
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40011000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40011000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40011000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40011000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_timer_40011000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40011000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40011000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40011000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40081000/pwm1_default
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_PATH "/soc/pinctrl@40081000/pwm1_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FULL_NAME "pwm1_default"
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FULL_NAME_UNQUOTED pwm1_default
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FULL_NAME_TOKEN pwm1_default
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FULL_NAME_UPPER_TOKEN PWM1_DEFAULT

/* Node parent (/soc/pinctrl@40081000) identifier: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_PARENT DT_N_S_soc_S_pinctrl_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_NODELABEL(fn) fn(pwm1_default)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm1_default, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_CHILD_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_HASH rOCAu4JnZSYB66Aqqh7EDY3kqgDuOaByHNXiLWubjQo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_ORD 76
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_REQUIRES_ORDS \
	5, /* /soc/pinctrl@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_SUPPORTS_ORDS \
	77, /* /soc/timer@40011000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_EXISTS 1
#define DT_N_NODELABEL_pwm1_default DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_pinmux {19 /* 0x13 */, 26 /* 0x1a */}
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_pinmux_IDX_0 19
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_pinmux_IDX_1 26
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, pinmux, 0) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, pinmux, 1)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_pinmux_LEN 2
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_drive_strength 2
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_drive_strength_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_drive_strength_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_ti_input_edge_detect 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_ti_input_edge_detect_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_bias_disable 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_input_schmitt_enable 0
#define DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/timer@40011000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40011000_S_pwm
 *
 * Binding (compatible = ti,cc13xx-cc26xx-timer-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/ti,cc13xx-cc26xx-timer-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_PATH "/soc/timer@40011000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timer_40011000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timer_40011000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timer_40011000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timer@40011000) identifier: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_PARENT DT_N_S_soc_S_timer_40011000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_NODELABEL(fn) fn(pwm1)
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timer_40011000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40011000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timer_40011000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_HASH Owyyrl5Md1LRpe8cWox3vwJsjSvPbYbUF1GZ71bUonQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_ORD 77
#define DT_N_S_soc_S_timer_40011000_S_pwm_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_REQUIRES_ORDS \
	75, /* /soc/timer@40011000 */ \
	76, /* /soc/pinctrl@40081000/pwm1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_EXISTS 1
#define DT_N_INST_1_ti_cc13xx_cc26xx_timer_pwm DT_N_S_soc_S_timer_40011000_S_pwm
#define DT_N_NODELABEL_pwm1                    DT_N_S_soc_S_timer_40011000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40011000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40011000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40011000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40011000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_40011000_S_pwm_COMPAT_MATCHES_ti_cc13xx_cc26xx_timer_pwm 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_timer_40011000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-timer-pwm"
#define DT_N_S_soc_S_timer_40011000_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timer_40011000_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40011000_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timer_40011000_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40011000_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40011000_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40011000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40011000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible {"ti,cc13xx-cc26xx-timer-pwm"}
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible_IDX_0 "ti,cc13xx-cc26xx-timer-pwm"
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-timer-pwm
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_timer_pwm
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_TIMER_PWM
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40011000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40011000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40011000_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40011000_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40011000_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timer_40011000_S_pwm_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/timer@40012000
 *
 * Node identifier: DT_N_S_soc_S_timer_40012000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/ti,cc13xx-cc26xx-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40012000_PATH "/soc/timer@40012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40012000_FULL_NAME "timer@40012000"
#define DT_N_S_soc_S_timer_40012000_FULL_NAME_UNQUOTED timer@40012000
#define DT_N_S_soc_S_timer_40012000_FULL_NAME_TOKEN timer_40012000
#define DT_N_S_soc_S_timer_40012000_FULL_NAME_UPPER_TOKEN TIMER_40012000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40012000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40012000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40012000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40012000_FOREACH_NODELABEL(fn) fn(gpt2)
#define DT_N_S_soc_S_timer_40012000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpt2, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40012000_CHILD_NUM 1
#define DT_N_S_soc_S_timer_40012000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40012000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40012000_S_pwm)
#define DT_N_S_soc_S_timer_40012000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40012000_S_pwm)
#define DT_N_S_soc_S_timer_40012000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40012000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40012000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40012000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40012000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40012000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_40012000_HASH alQcuBE4HGz9qzSQZ3KVOZ0sR_hWXbLaspX95SwzQIY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40012000_ORD 78
#define DT_N_S_soc_S_timer_40012000_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40012000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40012000_SUPPORTS_ORDS \
	79, /* /soc/timer@40012000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40012000_EXISTS 1
#define DT_N_INST_2_ti_cc13xx_cc26xx_timer DT_N_S_soc_S_timer_40012000
#define DT_N_NODELABEL_gpt2                DT_N_S_soc_S_timer_40012000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40012000_REG_NUM 1
#define DT_N_S_soc_S_timer_40012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_REG_IDX_0_VAL_ADDRESS 1073815552 /* 0x40012000 */
#define DT_N_S_soc_S_timer_40012000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40012000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40012000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40012000_IRQ_NUM 2
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_1_VAL_irq 20
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40012000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_40012000_IRQ_NAME_gpt2a_VAL_irq DT_N_S_soc_S_timer_40012000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40012000_IRQ_NAME_gpt2a_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_NAME_gpt2a_VAL_priority DT_N_S_soc_S_timer_40012000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40012000_IRQ_NAME_gpt2a_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_NAME_gpt2a_CONTROLLER DT_N_S_soc_S_timer_40012000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timer_40012000_IRQ_NAME_gpt2b_VAL_irq DT_N_S_soc_S_timer_40012000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timer_40012000_IRQ_NAME_gpt2b_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_NAME_gpt2b_VAL_priority DT_N_S_soc_S_timer_40012000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timer_40012000_IRQ_NAME_gpt2b_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_IRQ_NAME_gpt2b_CONTROLLER DT_N_S_soc_S_timer_40012000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timer_40012000_COMPAT_MATCHES_ti_cc13xx_cc26xx_timer 1
#define DT_N_S_soc_S_timer_40012000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_timer_40012000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-timer"
#define DT_N_S_soc_S_timer_40012000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40012000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40012000_P_reg {1073815552 /* 0x40012000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_reg_IDX_0 1073815552
#define DT_N_S_soc_S_timer_40012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */, 20 /* 0x14 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_timer_40012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40012000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_interrupts_IDX_2 20
#define DT_N_S_soc_S_timer_40012000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timer_40012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_status "disabled"
#define DT_N_S_soc_S_timer_40012000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40012000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40012000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40012000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40012000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40012000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40012000, status, 0)
#define DT_N_S_soc_S_timer_40012000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40012000, status, 0)
#define DT_N_S_soc_S_timer_40012000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40012000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_compatible {"ti,cc13xx-cc26xx-timer"}
#define DT_N_S_soc_S_timer_40012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-timer"
#define DT_N_S_soc_S_timer_40012000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-timer
#define DT_N_S_soc_S_timer_40012000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_timer
#define DT_N_S_soc_S_timer_40012000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_TIMER
#define DT_N_S_soc_S_timer_40012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40012000, compatible, 0)
#define DT_N_S_soc_S_timer_40012000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40012000, compatible, 0)
#define DT_N_S_soc_S_timer_40012000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40012000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names {"gpt2a", "gpt2b"}
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_IDX_0 "gpt2a"
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_IDX_0_STRING_UNQUOTED gpt2a
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_IDX_0_STRING_TOKEN gpt2a
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GPT2A
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_IDX_1 "gpt2b"
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_IDX_1_STRING_UNQUOTED gpt2b
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_IDX_1_STRING_TOKEN gpt2b
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN GPT2B
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40012000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timer_40012000, interrupt_names, 1)
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40012000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40012000, interrupt_names, 1)
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40012000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40012000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40012000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40012000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_timer_40012000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40012000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40012000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40012000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40012000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40012000_S_pwm
 *
 * Binding (compatible = ti,cc13xx-cc26xx-timer-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/ti,cc13xx-cc26xx-timer-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_PATH "/soc/timer@40012000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timer_40012000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timer_40012000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timer_40012000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timer@40012000) identifier: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_PARENT DT_N_S_soc_S_timer_40012000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_NODELABEL(fn) fn(pwm2)
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm2, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timer_40012000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40012000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timer_40012000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_HASH WH3U3eBlMABfSYR747hZ2K1fHxoUBk4qjFQl4v7Crq4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_ORD 79
#define DT_N_S_soc_S_timer_40012000_S_pwm_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_REQUIRES_ORDS \
	78, /* /soc/timer@40012000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_EXISTS 1
#define DT_N_INST_2_ti_cc13xx_cc26xx_timer_pwm DT_N_S_soc_S_timer_40012000_S_pwm
#define DT_N_NODELABEL_pwm2                    DT_N_S_soc_S_timer_40012000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40012000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40012000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40012000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40012000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_40012000_S_pwm_COMPAT_MATCHES_ti_cc13xx_cc26xx_timer_pwm 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_timer_40012000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-timer-pwm"
#define DT_N_S_soc_S_timer_40012000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40012000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40012000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40012000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40012000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible {"ti,cc13xx-cc26xx-timer-pwm"}
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible_IDX_0 "ti,cc13xx-cc26xx-timer-pwm"
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-timer-pwm
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_timer_pwm
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_TIMER_PWM
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40012000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40012000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40012000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40012000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40012000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40013000
 *
 * Node identifier: DT_N_S_soc_S_timer_40013000
 *
 * Binding (compatible = ti,cc13xx-cc26xx-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/ti,cc13xx-cc26xx-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40013000_PATH "/soc/timer@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40013000_FULL_NAME "timer@40013000"
#define DT_N_S_soc_S_timer_40013000_FULL_NAME_UNQUOTED timer@40013000
#define DT_N_S_soc_S_timer_40013000_FULL_NAME_TOKEN timer_40013000
#define DT_N_S_soc_S_timer_40013000_FULL_NAME_UPPER_TOKEN TIMER_40013000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40013000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40013000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40013000_FOREACH_NODELABEL(fn) fn(gpt3)
#define DT_N_S_soc_S_timer_40013000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpt3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40013000_CHILD_NUM 1
#define DT_N_S_soc_S_timer_40013000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40013000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40013000_S_pwm)
#define DT_N_S_soc_S_timer_40013000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40013000_S_pwm)
#define DT_N_S_soc_S_timer_40013000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40013000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40013000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_40013000_HASH FXDQhaUfZ648EFR7gUP2UGYdk3Zv6kZkN0QEbZOSgQE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40013000_ORD 80
#define DT_N_S_soc_S_timer_40013000_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40013000_REQUIRES_ORDS \
	2, /* /soc */ \
	3, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40013000_SUPPORTS_ORDS \
	81, /* /soc/timer@40013000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40013000_EXISTS 1
#define DT_N_INST_3_ti_cc13xx_cc26xx_timer DT_N_S_soc_S_timer_40013000
#define DT_N_NODELABEL_gpt3                DT_N_S_soc_S_timer_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40013000_REG_NUM 1
#define DT_N_S_soc_S_timer_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_timer_40013000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40013000_IRQ_NUM 2
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_1_VAL_irq 22
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40013000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_40013000_IRQ_NAME_gpt3a_VAL_irq DT_N_S_soc_S_timer_40013000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40013000_IRQ_NAME_gpt3a_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_NAME_gpt3a_VAL_priority DT_N_S_soc_S_timer_40013000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40013000_IRQ_NAME_gpt3a_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_NAME_gpt3a_CONTROLLER DT_N_S_soc_S_timer_40013000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timer_40013000_IRQ_NAME_gpt3b_VAL_irq DT_N_S_soc_S_timer_40013000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timer_40013000_IRQ_NAME_gpt3b_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_NAME_gpt3b_VAL_priority DT_N_S_soc_S_timer_40013000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timer_40013000_IRQ_NAME_gpt3b_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_IRQ_NAME_gpt3b_CONTROLLER DT_N_S_soc_S_timer_40013000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timer_40013000_COMPAT_MATCHES_ti_cc13xx_cc26xx_timer 1
#define DT_N_S_soc_S_timer_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_timer_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-timer"
#define DT_N_S_soc_S_timer_40013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40013000_P_reg {1073819648 /* 0x40013000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_timer_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_interrupts {21 /* 0x15 */, 0 /* 0x0 */, 22 /* 0x16 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_timer_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40013000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_interrupts_IDX_2 22
#define DT_N_S_soc_S_timer_40013000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timer_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_status "disabled"
#define DT_N_S_soc_S_timer_40013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40013000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40013000, status, 0)
#define DT_N_S_soc_S_timer_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40013000, status, 0)
#define DT_N_S_soc_S_timer_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_compatible {"ti,cc13xx-cc26xx-timer"}
#define DT_N_S_soc_S_timer_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_compatible_IDX_0 "ti,cc13xx-cc26xx-timer"
#define DT_N_S_soc_S_timer_40013000_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-timer
#define DT_N_S_soc_S_timer_40013000_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_timer
#define DT_N_S_soc_S_timer_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_TIMER
#define DT_N_S_soc_S_timer_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40013000, compatible, 0)
#define DT_N_S_soc_S_timer_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40013000, compatible, 0)
#define DT_N_S_soc_S_timer_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names {"gpt3a", "gpt3b"}
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_IDX_0 "gpt3a"
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_IDX_0_STRING_UNQUOTED gpt3a
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_IDX_0_STRING_TOKEN gpt3a
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GPT3A
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_IDX_1 "gpt3b"
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_IDX_1_STRING_UNQUOTED gpt3b
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_IDX_1_STRING_TOKEN gpt3b
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN GPT3B
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40013000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timer_40013000, interrupt_names, 1)
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40013000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40013000, interrupt_names, 1)
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40013000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40013000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40013000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40013000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_timer_40013000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40013000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40013000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40013000_S_pwm
 *
 * Binding (compatible = ti,cc13xx-cc26xx-timer-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/ti,cc13xx-cc26xx-timer-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_PATH "/soc/timer@40013000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timer_40013000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timer_40013000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timer_40013000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timer@40013000) identifier: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_PARENT DT_N_S_soc_S_timer_40013000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_NODELABEL(fn) fn(pwm3)
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_timer_40013000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40013000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timer_40013000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_HASH OCAgM5zvz1ewdZPlW1yCXoD_dOnUC5_G2f6R6mj6Ew8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_ORD 81
#define DT_N_S_soc_S_timer_40013000_S_pwm_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_REQUIRES_ORDS \
	80, /* /soc/timer@40013000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_EXISTS 1
#define DT_N_INST_3_ti_cc13xx_cc26xx_timer_pwm DT_N_S_soc_S_timer_40013000_S_pwm
#define DT_N_NODELABEL_pwm3                    DT_N_S_soc_S_timer_40013000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40013000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40013000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40013000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40013000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_40013000_S_pwm_COMPAT_MATCHES_ti_cc13xx_cc26xx_timer_pwm 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_timer_40013000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_COMPAT_MODEL_IDX_0 "cc13xx-cc26xx-timer-pwm"
#define DT_N_S_soc_S_timer_40013000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40013000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40013000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40013000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40013000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible {"ti,cc13xx-cc26xx-timer-pwm"}
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible_IDX_0 "ti,cc13xx-cc26xx-timer-pwm"
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED ti,cc13xx-cc26xx-timer-pwm
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible_IDX_0_STRING_TOKEN ti_cc13xx_cc26xx_timer_pwm
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_CC13XX_CC26XX_TIMER_PWM
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40013000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40013000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40013000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40013000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40013000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_random_40028000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40030000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_uart_40001000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_uart_40001000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40030000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_ieee802154              DT_N_S_soc_S_radio_40040000_S_ieee802154g
#define DT_CHOSEN_zephyr_ieee802154_EXISTS       1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default) fn(DT_N_S_soc_S_gpio_40022000) fn(DT_N_S_soc_S_random_40028000) fn(DT_N_S_soc_S_flash_controller_40030000) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_timer_40010000) fn(DT_N_S_soc_S_timer_40010000_S_pwm) fn(DT_N_S_soc_S_timer_40011000) fn(DT_N_S_soc_S_timer_40011000_S_pwm) fn(DT_N_S_soc_S_timer_40012000) fn(DT_N_S_soc_S_timer_40012000_S_pwm) fn(DT_N_S_soc_S_timer_40013000) fn(DT_N_S_soc_S_timer_40013000_S_pwm) fn(DT_N_S_soc_S_uart_40001000) fn(DT_N_S_soc_S_uart_4000b000) fn(DT_N_S_soc_S_i2c_40002000) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4) fn(DT_N_S_soc_S_spi_40000000) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000) fn(DT_N_S_soc_S_spi_40008000) fn(DT_N_S_soc_S_rtc_40092000) fn(DT_N_S_soc_S_radio_40040000) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g) fn(DT_N_S_soc_S_watchdog_40080000) fn(DT_N_S_soc_S_adc_400cb008) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_idle) fn(DT_N_S_cpus_S_power_states_S_standby) fn(DT_N_S_memory_20000000) fn(DT_N_S_memory_11000000) fn(DT_N_S_system_clock) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button_0) fn(DT_N_S_antenna_mux0) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_sensor_switch) fn(DT_N_S_sensor_switch_S_opt3001_light_44) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_pinctrl_40081000) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default) fn(DT_N_S_soc_S_gpio_40022000) fn(DT_N_S_soc_S_random_40028000) fn(DT_N_S_soc_S_flash_controller_40030000) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_timer_40010000) fn(DT_N_S_soc_S_timer_40010000_S_pwm) fn(DT_N_S_soc_S_timer_40011000) fn(DT_N_S_soc_S_timer_40011000_S_pwm) fn(DT_N_S_soc_S_uart_40001000) fn(DT_N_S_soc_S_uart_4000b000) fn(DT_N_S_soc_S_i2c_40002000) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4) fn(DT_N_S_soc_S_spi_40000000) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000) fn(DT_N_S_soc_S_rtc_40092000) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g) fn(DT_N_S_soc_S_adc_400cb008) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_idle) fn(DT_N_S_cpus_S_power_states_S_standby) fn(DT_N_S_memory_20000000) fn(DT_N_S_memory_11000000) fn(DT_N_S_system_clock) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button_0) fn(DT_N_S_antenna_mux0) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_sensor_switch) fn(DT_N_S_sensor_switch_S_opt3001_light_44) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_random_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40011000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40012000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40013000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40092000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40080000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_standby, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_memory_11000000, __VA_ARGS__) fn(DT_N_S_system_clock, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__) fn(DT_N_S_antenna_mux0, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_sensor_switch, __VA_ARGS__) fn(DT_N_S_sensor_switch_S_opt3001_light_44, __VA_ARGS__) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_tx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart0_rx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_tx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_uart1_rx_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_scl_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_i2c0_sda_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_sck_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_mosi_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_miso_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_spi0_cs2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_off, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_tx_pa_on, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_off, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_board_ant_subg_on, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40081000_S_pwm1_default, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_random_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40011000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40092000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_9, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_a, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_b, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_c, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_d, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400cb008_S_channel_e, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_standby, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_memory_11000000, __VA_ARGS__) fn(DT_N_S_system_clock, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__) fn(DT_N_S_antenna_mux0, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_sensor_switch, __VA_ARGS__) fn(DT_N_S_sensor_switch_S_opt3001_light_44, __VA_ARGS__) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_20000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_8e000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions_S_partition_ae000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_beagle_beagleconnect_freedom 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_pinctrl 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_gpio 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_trng 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_zephyr_memory_region 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_timer 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_timer_pwm 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_uart 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_i2c 1
#define DT_COMPAT_HAS_OKAY_beagle_usbbridge 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_spi 1
#define DT_COMPAT_HAS_OKAY_jedec_spi_nor 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_rtc_timer 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_ieee802154_subghz 1
#define DT_COMPAT_HAS_OKAY_ti_cc13xx_cc26xx_adc 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_skyworks_sky13317 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_i2c_switch 1
#define DT_COMPAT_HAS_OKAY_ti_opt3001 1
#define DT_COMPAT_HAS_OKAY_ti_hdc2010 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_beagle_beagleconnect_freedom_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_ti_cc13xx_cc26xx_pinctrl_NUM_OKAY 1
#define DT_N_INST_ti_cc13xx_cc26xx_gpio_NUM_OKAY 1
#define DT_N_INST_ti_cc13xx_cc26xx_trng_NUM_OKAY 1
#define DT_N_INST_ti_cc13xx_cc26xx_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 2
#define DT_N_INST_zephyr_memory_region_NUM_OKAY 2
#define DT_N_INST_ti_cc13xx_cc26xx_timer_NUM_OKAY 2
#define DT_N_INST_ti_cc13xx_cc26xx_timer_pwm_NUM_OKAY 2
#define DT_N_INST_ti_cc13xx_cc26xx_uart_NUM_OKAY 2
#define DT_N_INST_ti_cc13xx_cc26xx_i2c_NUM_OKAY 1
#define DT_N_INST_beagle_usbbridge_NUM_OKAY 1
#define DT_N_INST_ti_cc13xx_cc26xx_spi_NUM_OKAY 1
#define DT_N_INST_jedec_spi_nor_NUM_OKAY 1
#define DT_N_INST_ti_cc13xx_cc26xx_rtc_timer_NUM_OKAY 1
#define DT_N_INST_ti_cc13xx_cc26xx_ieee802154_subghz_NUM_OKAY 1
#define DT_N_INST_ti_cc13xx_cc26xx_adc_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4_NUM_OKAY 1
#define DT_N_INST_zephyr_power_state_NUM_OKAY 2
#define DT_N_INST_mmio_sram_NUM_OKAY 2
#define DT_N_INST_fixed_clock_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_skyworks_sky13317_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_i2c_switch_NUM_OKAY 1
#define DT_N_INST_ti_opt3001_NUM_OKAY 1
#define DT_N_INST_ti_hdc2010_NUM_OKAY 1
#define DT_FOREACH_OKAY_beagle_beagleconnect_freedom(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_beagle_beagleconnect_freedom(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_beagle_beagleconnect_freedom(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_beagle_beagleconnect_freedom(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_pinctrl(fn) fn(DT_N_S_soc_S_pinctrl_40081000)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_pinctrl(fn, ...) fn(DT_N_S_soc_S_pinctrl_40081000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_gpio(fn) fn(DT_N_S_soc_S_gpio_40022000)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_40022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_gpio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_trng(fn) fn(DT_N_S_soc_S_random_40028000)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_trng(fn, ...) fn(DT_N_S_soc_S_random_40028000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_trng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_trng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40030000)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_memory_region(fn) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8) fn(DT_N_S_memory_11000000)
#define DT_FOREACH_OKAY_VARGS_zephyr_memory_region(fn, ...) fn(DT_N_S_soc_S_flash_controller_40030000_S_flash_0_S_partitions_S_partition_affa8, __VA_ARGS__) fn(DT_N_S_memory_11000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_memory_region(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_memory_region(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_timer(fn) fn(DT_N_S_soc_S_timer_40010000) fn(DT_N_S_soc_S_timer_40011000)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_timer(fn, ...) fn(DT_N_S_soc_S_timer_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40011000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_timer(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_timer(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_timer_pwm(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm) fn(DT_N_S_soc_S_timer_40011000_S_pwm)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_timer_pwm(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40011000_S_pwm, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_timer_pwm(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_timer_pwm(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_uart(fn) fn(DT_N_S_soc_S_uart_40001000) fn(DT_N_S_soc_S_uart_4000b000)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_uart(fn, ...) fn(DT_N_S_soc_S_uart_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_4000b000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_uart(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_uart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_i2c(fn) fn(DT_N_S_soc_S_i2c_40002000)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_i2c(fn, ...) fn(DT_N_S_soc_S_i2c_40002000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_beagle_usbbridge(fn) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4)
#define DT_FOREACH_OKAY_VARGS_beagle_usbbridge(fn, ...) fn(DT_N_S_soc_S_i2c_40002000_S_msp430_usbbridge_4, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_beagle_usbbridge(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_beagle_usbbridge(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_spi(fn) fn(DT_N_S_soc_S_spi_40000000)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_spi(fn, ...) fn(DT_N_S_soc_S_spi_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_jedec_spi_nor(fn) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0)
#define DT_FOREACH_OKAY_VARGS_jedec_spi_nor(fn, ...) fn(DT_N_S_soc_S_spi_40000000_S_gd25q16c_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_jedec_spi_nor(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_jedec_spi_nor(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_rtc_timer(fn) fn(DT_N_S_soc_S_rtc_40092000)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_rtc_timer(fn, ...) fn(DT_N_S_soc_S_rtc_40092000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_rtc_timer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_rtc_timer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_ieee802154_subghz(fn) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_ieee802154_subghz(fn, ...) fn(DT_N_S_soc_S_radio_40040000_S_ieee802154g, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_ieee802154_subghz(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_ieee802154_subghz(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_cc13xx_cc26xx_adc(fn) fn(DT_N_S_soc_S_adc_400cb008)
#define DT_FOREACH_OKAY_VARGS_ti_cc13xx_cc26xx_adc(fn, ...) fn(DT_N_S_soc_S_adc_400cb008, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_cc13xx_cc26xx_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_cc13xx_cc26xx_adc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_cpus_S_power_states_S_idle) fn(DT_N_S_cpus_S_power_states_S_standby)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_standby, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_20000000) fn(DT_N_S_memory_11000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_memory_11000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_system_clock)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_system_clock, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_skyworks_sky13317(fn) fn(DT_N_S_antenna_mux0)
#define DT_FOREACH_OKAY_VARGS_skyworks_sky13317(fn, ...) fn(DT_N_S_antenna_mux0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_skyworks_sky13317(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_skyworks_sky13317(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_i2c_switch(fn) fn(DT_N_S_sensor_switch)
#define DT_FOREACH_OKAY_VARGS_gpio_i2c_switch(fn, ...) fn(DT_N_S_sensor_switch, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_i2c_switch(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_i2c_switch(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_opt3001(fn) fn(DT_N_S_sensor_switch_S_opt3001_light_44)
#define DT_FOREACH_OKAY_VARGS_ti_opt3001(fn, ...) fn(DT_N_S_sensor_switch_S_opt3001_light_44, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_opt3001(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_opt3001(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_hdc2010(fn) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41)
#define DT_FOREACH_OKAY_VARGS_ti_hdc2010(fn, ...) fn(DT_N_S_sensor_switch_S_hdc2010_humidity_41, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_hdc2010(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_hdc2010(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_beagle_usbbridge_BUS_i2c 1
#define DT_COMPAT_jedec_spi_nor_BUS_spi 1
#define DT_COMPAT_ti_opt3001_BUS_i2c 1
#define DT_COMPAT_ti_hdc2010_BUS_i2c 1
